Maple implementation of the greedy automatic template generator.

If you use this code, please cite the following work:

@inproceedings{martyushev2022optimizing,
  title={Optimizing Elimination Templates by Greedy Parameter Search},
  author={Martyushev, Evgeniy and Vrablikova, Jana and Pajdla, Tomas},
  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},
  pages={15754--15764},
  year={2022}
}
Preprint: https://arxiv.org/abs/2203.14901

E-mail: martiushevev@susu.ru
Project page: https://github.com/martyushev/EliminationTemplates

Software required:

1) Maple
2) Macaulay2 (http://www2.macaulay2.com/Macaulay2/)
3) Gfan (https://math.au.dk/~jensen/software/gfan/gfan.html)

How to use:

1) Formulating minimal problems as polynomial systems
 1.1) See examples in ../problems/F_prob.mw

2) Finding quotient space bases
 2.1) Open BasisFinder.mw
 2.2) Pick minimal problem (prob := "problem_name")
 2.3) Configure parameters (see comments in BasisFinder.mw)
 2.4) Enter BasisFinder(prob, opts):

3) Finding monomial orderings and change matrices
 3.1) Open MonOrdFinder.mw
 3.2) Pick minimal problem (prob := "problem_name")
 3.3) Configure parameters (see comments in MonOrdFinder.mw)
 3.4) Follow instructions in MonOrdFinder.mw

4) Finding elimination templates
 4.1) Open TemplateFinder.mw
 4.2) Pick minimal problem (prob := "problem_name")
 4.3) Configure parameters (see comments in TemplateFinder.mw)
 4.4) Enter TemplateFinder(prob, opts):

5) Generating Matlab solver
 5.1) Open SolverGenerator.mw
 5.2) Pick minimal problem (prob := "problem_name")
 5.3) Configure parameters (see comments in SolverGenerator.mw)
 5.4) Enter SolverGenerator(prob, opts):



Folders:

1) bases: pre-computed quotient space bases
2) cm: change matrices pre-computed in Macaulay2
3) gfan: Grobner bases generated by Gfan
4) optim: best templates found
5) solvers: generated Matlab solvers
6) weights: pre-computed weight vectors for weighted-degree orderings