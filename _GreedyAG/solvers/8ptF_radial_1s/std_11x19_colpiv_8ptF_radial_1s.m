% Input: coefficient matrix C of size 2x16

function [x,y] = std_11x19_colpiv_8ptF_radial_1s(C)

    i_dx = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,4,4,5,5,5,5,5,5,6,6,6,6,6,6,7,7,7,7,7,7,8,8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11];
    j_dx = [1,2,3,4,5,6,8,9,10,11,12,13,15,16,18,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,4,5,8,9,4,5,6,8,9,11,5,6,7,9,11,14,2,3,8,9,10,12,8,9,10,11,12,15,9,11,12,14,15,17,3,10,12,13,16,10,12,13,15,16,18,12,15,16,17,18,19];
    C_dx = [1,5,11,3,7,13,9,15,17,21,23,25,27,29,31,1,3,7,13,5,9,11,15,17,19,21,23,25,27,29,31,18,26,24,28,30,32,18,24,28,26,30,32,18,24,28,26,30,32,18,26,24,28,30,32,18,24,26,28,30,32,18,24,26,28,30,32,18,24,28,30,32,18,24,26,28,30,32,18,24,26,28,30,32];
    M = sparse(i_dx,j_dx,C(C_dx),11,19);

    [L,~,Pi] = lu(M(:,1:3));
    Pi = Pi';
    M = [Pi*L Pi(:,4:end)]\M(:,4:end);
    M = full(M(4:end,:));

    [L,UR,Pi] = lu(M(:,1:4));
    Pi = Pi';
    M = [Pi*L Pi(:,5:end)]\M(:,5:end);
    MP = M(1:4,:);
    NP = M(5:end,:);

    [Q,U,Pi] = qr(NP(:,1:end-3));
    A = UR\[MP(:,1:end-3)*Pi MP(:,end-2:end)];
    B = U(:,1:4)\[U(:,5:end) Q'*NP(:,end-2:end)];
    M = [-A(:,end-7:end)+A(:,1:end-8)*B; -B];

    xP = [13,14,1,15,2,3,16,4,5,7,8,10];
    P1 = [(1:9)*Pi 10:12];
    T = getT(M,[13:16 P1(1:end-8)],P1(end-7:end),xP);

    [V,D] = eig(T);
    sol = [V(7,:)./V(8,:); diag(D).'];

    I = find(not(isnan(sol(1,:))) & not(isinf(sol(1,:))));
    %I = I(not(imag(sol(1,:)))); % uncomment this line for real roots only
    y = sol(1,I);
    x = sol(2,I);

end