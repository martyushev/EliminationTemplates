Maple implementation of Automatic template generator.

If you use this code in your research, please cite the following work:

@inproceedings{martyushev2022optimizing,
  title={Optimizing Elimination Templates by Greedy Parameter Search},
  author={Martyushev, Evgeniy and Vrablikova, Jana and Pajdla, Tomas},
  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},
  pages={--},
  year={2022}
} 

E-mail: martiushevev@susu.ru
Project page: github.com/martyushev/EliminationTemplates

Software needed:

1) Maple
2) Macaulay2 (http://www2.macaulay2.com/Macaulay2/)
3) Gfan (https://math.au.dk/~jensen/software/gfan/gfan.html)

How to use:

1) Open GreedyAG.mw in Maple
2) Pick minimal problem (prob := "problem_name")
3) Configure parameters (see comments in GreedyAG.mw)
4) Enter TemplateFinder(prob, opts);


Folders:

1) problems: minimal problem formulations
2) cm: change matrices pre-computed in Macaulay2 for all Grobner bases generated by Gfan
3) gfan: Grobner bases generated by Gfan
4) nongb: pre-computed non-standard quotient space bases
5) optim: best templates found

