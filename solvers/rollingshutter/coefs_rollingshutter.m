function C = coefs_rollingshutter(data)

    v1 = data{1};
    v2 = data{2};
    v3 = data{3};
    v4 = data{4};
    v5 = data{5};
    v6 = data{6};

    C = zeros(10,21);

    C(8) = v1(1)*v1(2)+v1(4)*v1(5)+v1(7)*v1(8);
    C(9) = v1(1)*v1(3)+v1(4)*v1(6)+v1(7)*v1(9);
    C(5) = v1(1)*v1(4)+v1(2)*v1(5)+v1(3)*v1(6);
    C(6) = v1(1)*v1(7)+v1(2)*v1(8)+v1(3)*v1(9);
    C(10) = v1(2)*v1(3)+v1(5)*v1(6)+v1(8)*v1(9);
    C(7) = v1(5)*v1(8)+v1(4)*v1(7)+v1(6)*v1(9);
    C(28) = v2(1)*v2(2)+v2(4)*v2(5)+v2(7)*v2(8);
    C(29) = v2(1)*v2(3)+v2(4)*v2(6)+v2(7)*v2(9);
    C(25) = v2(1)*v2(4)+v2(2)*v2(5)+v2(3)*v2(6);
    C(26) = v2(1)*v2(7)+v2(2)*v2(8)+v2(3)*v2(9);
    C(30) = v2(2)*v2(3)+v2(5)*v2(6)+v2(8)*v2(9);
    C(27) = v2(4)*v2(7)+v2(5)*v2(8)+v2(6)*v2(9);
    C(58) = v3(1)*v3(2)+v3(4)*v3(5)+v3(7)*v3(8);
    C(59) = v3(1)*v3(3)+v3(4)*v3(6)+v3(7)*v3(9);
    C(55) = v3(1)*v3(4)+v3(2)*v3(5)+v3(3)*v3(6);
    C(56) = v3(1)*v3(7)+v3(2)*v3(8)+v3(3)*v3(9);
    C(60) = v3(2)*v3(3)+v3(5)*v3(6)+v3(8)*v3(9);
    C(57) = v3(4)*v3(7)+v3(5)*v3(8)+v3(6)*v3(9);
    C(98) = v4(1)*v4(2)+v4(4)*v4(5)+v4(7)*v4(8);
    C(99) = v4(1)*v4(3)+v4(4)*v4(6)+v4(7)*v4(9);
    C(95) = v4(1)*v4(4)+v4(2)*v4(5)+v4(3)*v4(6);
    C(96) = v4(1)*v4(7)+v4(2)*v4(8)+v4(3)*v4(9);
    C(100) = v4(2)*v4(3)+v4(5)*v4(6)+v4(8)*v4(9);
    C(97) = v4(4)*v4(7)+v4(5)*v4(8)+v4(6)*v4(9);
    C(148) = v5(1)*v5(2)+v5(4)*v5(5)+v5(7)*v5(8);
    C(149) = v5(1)*v5(3)+v5(4)*v5(6)+v5(7)*v5(9);
    C(145) = v5(1)*v5(4)+v5(2)*v5(5)+v5(3)*v5(6);
    C(146) = v5(1)*v5(7)+v5(2)*v5(8)+v5(3)*v5(9);
    C(150) = v5(2)*v5(3)+v5(5)*v5(6)+v5(8)*v5(9);
    C(147) = v5(4)*v5(7)+v5(5)*v5(8)+v5(6)*v5(9);
    C(208) = v6(1)*v6(2)+v6(4)*v6(5)+v6(7)*v6(8);
    C(209) = v6(1)*v6(3)+v6(4)*v6(6)+v6(7)*v6(9);
    C(205) = v6(1)*v6(4)+v6(2)*v6(5)+v6(3)*v6(6);
    C(206) = v6(1)*v6(7)+v6(2)*v6(8)+v6(3)*v6(9);
    C(210) = v6(2)*v6(3)+v6(5)*v6(6)+v6(8)*v6(9);
    C(207) = v6(4)*v6(7)+v6(5)*v6(8)+v6(6)*v6(9);
    C(2) = v1(1)^2+v1(2)^2+v1(3)^2-v1(7)^2-v1(8)^2-v1(9)^2;
    C(4) = v1(1)^2-v1(3)^2+v1(4)^2-v1(6)^2+v1(7)^2-v1(9)^2;
    C(1) = -v1(4)^2+v1(3)^2-v1(5)^2+v1(2)^2-v1(6)^2+v1(1)^2;
    C(3) = -v1(5)^2+v1(7)^2-v1(8)^2+v1(1)^2-v1(2)^2+v1(4)^2;
    C(22) = v2(1)^2+v2(2)^2+v2(3)^2-v2(7)^2-v2(8)^2-v2(9)^2;
    C(24) = v2(1)^2-v2(3)^2+v2(4)^2-v2(6)^2+v2(7)^2-v2(9)^2;
    C(23) = -v2(5)^2+v2(7)^2-v2(8)^2+v2(1)^2-v2(2)^2+v2(4)^2;
    C(21) = -v2(6)^2+v2(1)^2-v2(4)^2+v2(2)^2+v2(3)^2-v2(5)^2;
    C(52) = v3(1)^2+v3(2)^2+v3(3)^2-v3(7)^2-v3(8)^2-v3(9)^2;
    C(54) = v3(1)^2-v3(3)^2+v3(4)^2-v3(6)^2+v3(7)^2-v3(9)^2;
    C(51) = v3(3)^2+v3(2)^2-v3(4)^2+v3(1)^2-v3(6)^2-v3(5)^2;
    C(53) = -v3(5)^2+v3(7)^2-v3(8)^2+v3(1)^2-v3(2)^2+v3(4)^2;
    C(92) = v4(1)^2+v4(2)^2+v4(3)^2-v4(7)^2-v4(8)^2-v4(9)^2;
    C(94) = v4(1)^2-v4(3)^2+v4(4)^2-v4(6)^2+v4(7)^2-v4(9)^2;
    C(91) = v4(2)^2-v4(5)^2-v4(4)^2+v4(3)^2+v4(1)^2-v4(6)^2;
    C(93) = -v4(5)^2+v4(7)^2-v4(8)^2+v4(1)^2-v4(2)^2+v4(4)^2;
    C(142) = v5(1)^2+v5(2)^2+v5(3)^2-v5(7)^2-v5(8)^2-v5(9)^2;
    C(144) = v5(1)^2-v5(3)^2+v5(4)^2-v5(6)^2+v5(7)^2-v5(9)^2;
    C(141) = v5(1)^2-v5(4)^2+v5(3)^2-v5(6)^2+v5(2)^2-v5(5)^2;
    C(143) = -v5(5)^2+v5(7)^2-v5(8)^2+v5(1)^2-v5(2)^2+v5(4)^2;
    C(203) = v6(1)^2-v6(2)^2+v6(4)^2-v6(5)^2+v6(7)^2-v6(8)^2;
    C(201) = v6(1)^2+v6(2)^2+v6(3)^2-v6(4)^2-v6(5)^2-v6(6)^2;
    C(204) = v6(1)^2-v6(3)^2+v6(4)^2-v6(6)^2+v6(7)^2-v6(9)^2;
    C(202) = -v6(8)^2-v6(9)^2+v6(1)^2+v6(2)^2+v6(3)^2-v6(7)^2;
    C(13) = 2*v1(1)*v2(1)-2*v1(2)*v2(2)+2*v1(4)*v2(4)-2*v1(5)*v2(5)+2*v1(7)*v2(7)-2*v1(8)*v2(8);
    C(18) = v1(1)*v2(2)+v2(1)*v1(2)+v1(4)*v2(5)+v2(4)*v1(5)+v1(7)*v2(8)+v2(7)*v1(8);
    C(16) = v1(1)*v2(7)+v2(1)*v1(7)+v1(2)*v2(8)+v2(2)*v1(8)+v1(3)*v2(9)+v2(3)*v1(9);
    C(38) = v1(1)*v3(2)+v3(1)*v1(2)+v1(4)*v3(5)+v3(4)*v1(5)+v1(7)*v3(8)+v3(7)*v1(8);
    C(36) = v1(1)*v3(7)+v3(1)*v1(7)+v1(2)*v3(8)+v3(2)*v1(8)+v1(3)*v3(9)+v3(3)*v1(9);
    C(68) = v1(1)*v4(2)+v4(1)*v1(2)+v1(4)*v4(5)+v4(4)*v1(5)+v1(7)*v4(8)+v4(7)*v1(8);
    C(66) = v1(1)*v4(7)+v4(1)*v1(7)+v1(2)*v4(8)+v4(2)*v1(8)+v1(3)*v4(9)+v4(3)*v1(9);
    C(108) = v1(1)*v5(2)+v5(1)*v1(2)+v1(4)*v5(5)+v5(4)*v1(5)+v1(7)*v5(8)+v5(7)*v1(8);
    C(106) = v1(1)*v5(7)+v5(1)*v1(7)+v1(2)*v5(8)+v5(2)*v1(8)+v1(3)*v5(9)+v5(3)*v1(9);
    C(153) = 2*v1(1)*v6(1)-2*v1(2)*v6(2)+2*v1(4)*v6(4)-2*v1(5)*v6(5)+2*v1(7)*v6(7)-2*v1(8)*v6(8);
    C(151) = 2*v1(1)*v6(1)+2*v1(2)*v6(2)+2*v1(3)*v6(3)-2*v1(4)*v6(4)-2*v1(5)*v6(5)-2*v1(6)*v6(6);
    C(152) = 2*v1(1)*v6(1)+2*v1(2)*v6(2)+2*v1(3)*v6(3)-2*v1(7)*v6(7)-2*v1(8)*v6(8)-2*v1(9)*v6(9);
    C(158) = v1(1)*v6(2)+v6(1)*v1(2)+v1(4)*v6(5)+v6(4)*v1(5)+v6(7)*v1(8)+v1(7)*v6(8);
    C(159) = v1(1)*v6(3)+v6(1)*v1(3)+v1(4)*v6(6)+v6(4)*v1(6)+v1(7)*v6(9)+v6(7)*v1(9);
    C(155) = v1(1)*v6(4)+v6(1)*v1(4)+v1(2)*v6(5)+v6(2)*v1(5)+v1(3)*v6(6)+v6(3)*v1(6);
    C(156) = v1(1)*v6(7)+v6(1)*v1(7)+v1(2)*v6(8)+v6(2)*v1(8)+v1(3)*v6(9)+v6(3)*v1(9);
    C(20) = v1(2)*v2(3)+v2(2)*v1(3)+v1(5)*v2(6)+v2(5)*v1(6)+v1(8)*v2(9)+v2(8)*v1(9);
    C(160) = v1(2)*v6(3)+v6(2)*v1(3)+v1(5)*v6(6)+v6(5)*v1(6)+v1(8)*v6(9)+v6(8)*v1(9);
    C(11) = -2*v1(4)*v2(4)-2*v1(5)*v2(5)-2*v1(6)*v2(6)+2*v1(1)*v2(1)+2*v1(2)*v2(2)+2*v1(3)*v2(3);
    C(31) = -2*v1(4)*v3(4)-2*v1(5)*v3(5)-2*v1(6)*v3(6)+2*v1(1)*v3(1)+2*v1(2)*v3(2)+2*v1(3)*v3(3);
    C(61) = -2*v1(4)*v4(4)-2*v1(5)*v4(5)-2*v1(6)*v4(6)+2*v1(1)*v4(1)+2*v1(2)*v4(2)+2*v1(3)*v4(3);
    C(101) = -2*v1(4)*v5(4)-2*v1(5)*v5(5)-2*v1(6)*v5(6)+2*v1(1)*v5(1)+2*v1(2)*v5(2)+2*v1(3)*v5(3);
    C(17) = v1(5)*v2(8)+v2(5)*v1(8)+v1(6)*v2(9)+v2(6)*v1(9)+v1(4)*v2(7)+v2(4)*v1(7);
    C(37) = v1(5)*v3(8)+v3(5)*v1(8)+v1(6)*v3(9)+v3(6)*v1(9)+v1(4)*v3(7)+v3(4)*v1(7);
    C(67) = v1(5)*v4(8)+v4(5)*v1(8)+v1(6)*v4(9)+v4(6)*v1(9)+v1(4)*v4(7)+v4(4)*v1(7);
    C(14) = 2*v1(7)*v2(7)-2*v1(9)*v2(9)+2*v1(1)*v2(1)-2*v1(3)*v2(3)+2*v1(4)*v2(4)-2*v1(6)*v2(6);
    C(34) = 2*v1(7)*v3(7)-2*v1(9)*v3(9)+2*v1(1)*v3(1)-2*v1(3)*v3(3)+2*v1(4)*v3(4)-2*v1(6)*v3(6);
    C(64) = 2*v1(7)*v4(7)-2*v1(9)*v4(9)+2*v1(1)*v4(1)-2*v1(3)*v4(3)+2*v1(4)*v4(4)-2*v1(6)*v4(6);
    C(104) = 2*v1(7)*v5(7)-2*v1(9)*v5(9)+2*v1(1)*v5(1)-2*v1(3)*v5(3)+2*v1(4)*v5(4)-2*v1(6)*v5(6);
    C(12) = -2*v1(8)*v2(8)-2*v1(9)*v2(9)+2*v1(1)*v2(1)+2*v1(2)*v2(2)+2*v1(3)*v2(3)-2*v1(7)*v2(7);
    C(33) = -2*v1(8)*v3(8)+2*v1(1)*v3(1)-2*v1(2)*v3(2)+2*v1(4)*v3(4)-2*v1(5)*v3(5)+2*v1(7)*v3(7);
    C(32) = -2*v1(8)*v3(8)-2*v1(9)*v3(9)+2*v1(1)*v3(1)+2*v1(2)*v3(2)+2*v1(3)*v3(3)-2*v1(7)*v3(7);
    C(63) = -2*v1(8)*v4(8)+2*v1(1)*v4(1)-2*v1(2)*v4(2)+2*v1(4)*v4(4)-2*v1(5)*v4(5)+2*v1(7)*v4(7);
    C(62) = -2*v1(8)*v4(8)-2*v1(9)*v4(9)+2*v1(1)*v4(1)+2*v1(2)*v4(2)+2*v1(3)*v4(3)-2*v1(7)*v4(7);
    C(103) = -2*v1(8)*v5(8)+2*v1(1)*v5(1)-2*v1(2)*v5(2)+2*v1(4)*v5(4)-2*v1(5)*v5(5)+2*v1(7)*v5(7);
    C(102) = -2*v1(8)*v5(8)-2*v1(9)*v5(9)+2*v1(1)*v5(1)+2*v1(2)*v5(2)+2*v1(3)*v5(3)-2*v1(7)*v5(7);
    C(154) = -2*v1(9)*v6(9)-2*v1(6)*v6(6)+2*v1(7)*v6(7)+2*v1(1)*v6(1)-2*v1(3)*v6(3)+2*v1(4)*v6(4);
    C(15) = v2(1)*v1(4)+v2(2)*v1(5)+v1(3)*v2(6)+v2(3)*v1(6)+v1(1)*v2(4)+v1(2)*v2(5);
    C(48) = v2(1)*v3(2)+v3(1)*v2(2)+v2(4)*v3(5)+v3(4)*v2(5)+v2(7)*v3(8)+v3(7)*v2(8);
    C(49) = v2(1)*v3(3)+v3(1)*v2(3)+v2(4)*v3(6)+v3(4)*v2(6)+v2(7)*v3(9)+v3(7)*v2(9);
    C(45) = v2(1)*v3(4)+v3(1)*v2(4)+v2(2)*v3(5)+v3(2)*v2(5)+v2(3)*v3(6)+v3(3)*v2(6);
    C(46) = v2(1)*v3(7)+v3(1)*v2(7)+v2(2)*v3(8)+v3(2)*v2(8)+v2(3)*v3(9)+v3(3)*v2(9);
    C(78) = v2(1)*v4(2)+v4(1)*v2(2)+v2(4)*v4(5)+v4(4)*v2(5)+v2(7)*v4(8)+v4(7)*v2(8);
    C(79) = v2(1)*v4(3)+v2(4)*v4(6)+v4(4)*v2(6)+v2(7)*v4(9)+v4(7)*v2(9)+v4(1)*v2(3);
    C(75) = v2(1)*v4(4)+v4(1)*v2(4)+v2(2)*v4(5)+v4(2)*v2(5)+v2(3)*v4(6)+v4(3)*v2(6);
    C(76) = v2(1)*v4(7)+v4(1)*v2(7)+v2(2)*v4(8)+v4(2)*v2(8)+v2(3)*v4(9)+v4(3)*v2(9);
    C(118) = v2(1)*v5(2)+v5(1)*v2(2)+v2(4)*v5(5)+v5(4)*v2(5)+v2(7)*v5(8)+v5(7)*v2(8);
    C(119) = v2(1)*v5(3)+v2(4)*v5(6)+v5(4)*v2(6)+v2(7)*v5(9)+v5(7)*v2(9)+v5(1)*v2(3);
    C(115) = v2(1)*v5(4)+v5(1)*v2(4)+v2(2)*v5(5)+v5(2)*v2(5)+v2(3)*v5(6)+v5(3)*v2(6);
    C(116) = v2(1)*v5(7)+v5(1)*v2(7)+v2(2)*v5(8)+v5(2)*v2(8)+v2(3)*v5(9)+v5(3)*v2(9);
    C(163) = 2*v2(1)*v6(1)-2*v2(2)*v6(2)+2*v2(4)*v6(4)-2*v2(5)*v6(5)+2*v2(7)*v6(7)-2*v2(8)*v6(8);
    C(161) = 2*v2(1)*v6(1)+2*v2(2)*v6(2)+2*v2(3)*v6(3)-2*v2(4)*v6(4)-2*v2(5)*v6(5)-2*v2(6)*v6(6);
    C(162) = 2*v2(1)*v6(1)+2*v2(2)*v6(2)+2*v2(3)*v6(3)-2*v2(7)*v6(7)-2*v2(8)*v6(8)-2*v2(9)*v6(9);
    C(168) = v2(1)*v6(2)+v6(1)*v2(2)+v2(4)*v6(5)+v6(4)*v2(5)+v6(7)*v2(8)+v2(7)*v6(8);
    C(169) = v2(1)*v6(3)+v6(1)*v2(3)+v2(4)*v6(6)+v6(4)*v2(6)+v2(7)*v6(9)+v6(7)*v2(9);
    C(165) = v2(1)*v6(4)+v6(1)*v2(4)+v2(2)*v6(5)+v6(2)*v2(5)+v2(3)*v6(6)+v6(3)*v2(6);
    C(166) = v2(1)*v6(7)+v6(1)*v2(7)+v2(2)*v6(8)+v6(2)*v2(8)+v2(3)*v6(9)+v6(3)*v2(9);
    C(170) = v2(2)*v6(3)+v6(2)*v2(3)+v2(5)*v6(6)+v6(5)*v2(6)+v2(8)*v6(9)+v6(8)*v2(9);
    C(71) = 2*v2(3)*v4(3)-2*v2(4)*v4(4)-2*v2(5)*v4(5)-2*v2(6)*v4(6)+2*v2(1)*v4(1)+2*v2(2)*v4(2);
    C(111) = 2*v2(3)*v5(3)-2*v2(4)*v5(4)-2*v2(5)*v5(5)-2*v2(6)*v5(6)+2*v2(1)*v5(1)+2*v2(2)*v5(2);
    C(19) = v2(4)*v1(6)+v1(7)*v2(9)+v2(7)*v1(9)+v1(1)*v2(3)+v2(1)*v1(3)+v1(4)*v2(6);
    C(41) = -2*v2(4)*v3(4)-2*v2(5)*v3(5)-2*v2(6)*v3(6)+2*v2(1)*v3(1)+2*v2(2)*v3(2)+2*v2(3)*v3(3);
    C(47) = v2(5)*v3(8)+v3(5)*v2(8)+v2(6)*v3(9)+v3(6)*v2(9)+v2(4)*v3(7)+v3(4)*v2(7);
    C(77) = v2(5)*v4(8)+v4(5)*v2(8)+v2(6)*v4(9)+v4(6)*v2(9)+v2(4)*v4(7)+v4(4)*v2(7);
    C(44) = -2*v2(6)*v3(6)+2*v2(7)*v3(7)-2*v2(9)*v3(9)+2*v2(1)*v3(1)-2*v2(3)*v3(3)+2*v2(4)*v3(4);
    C(74) = -2*v2(6)*v4(6)+2*v2(7)*v4(7)-2*v2(9)*v4(9)+2*v2(1)*v4(1)-2*v2(3)*v4(3)+2*v2(4)*v4(4);
    C(114) = -2*v2(6)*v5(6)+2*v2(7)*v5(7)-2*v2(9)*v5(9)+2*v2(1)*v5(1)-2*v2(3)*v5(3)+2*v2(4)*v5(4);
    C(43) = -2*v2(8)*v3(8)+2*v2(1)*v3(1)-2*v2(2)*v3(2)+2*v2(4)*v3(4)-2*v2(5)*v3(5)+2*v2(7)*v3(7);
    C(42) = -2*v2(8)*v3(8)-2*v2(9)*v3(9)+2*v2(1)*v3(1)+2*v2(2)*v3(2)+2*v2(3)*v3(3)-2*v2(7)*v3(7);
    C(73) = -2*v2(8)*v4(8)+2*v2(1)*v4(1)-2*v2(2)*v4(2)+2*v2(4)*v4(4)-2*v2(5)*v4(5)+2*v2(7)*v4(7);
    C(72) = -2*v2(8)*v4(8)-2*v2(9)*v4(9)+2*v2(1)*v4(1)+2*v2(2)*v4(2)+2*v2(3)*v4(3)-2*v2(7)*v4(7);
    C(113) = -2*v2(8)*v5(8)+2*v2(1)*v5(1)-2*v2(2)*v5(2)+2*v2(4)*v5(4)-2*v2(5)*v5(5)+2*v2(7)*v5(7);
    C(112) = -2*v2(8)*v5(8)-2*v2(9)*v5(9)+2*v2(1)*v5(1)+2*v2(2)*v5(2)+2*v2(3)*v5(3)-2*v2(7)*v5(7);
    C(120) = v2(8)*v5(9)+v5(8)*v2(9)+v2(2)*v5(3)+v5(2)*v2(3)+v2(5)*v5(6)+v5(5)*v2(6);
    C(164) = -2*v2(9)*v6(9)-2*v2(6)*v6(6)+2*v2(7)*v6(7)+2*v2(1)*v6(1)-2*v2(3)*v6(3)+2*v2(4)*v6(4);
    C(39) = v3(1)*v1(3)+v3(4)*v1(6)+v1(7)*v3(9)+v3(7)*v1(9)+v1(1)*v3(3)+v1(4)*v3(6);
    C(35) = v3(1)*v1(4)+v3(2)*v1(5)+v1(3)*v3(6)+v3(3)*v1(6)+v1(1)*v3(4)+v1(2)*v3(5);
    C(88) = v3(1)*v4(2)+v4(1)*v3(2)+v3(4)*v4(5)+v4(4)*v3(5)+v3(7)*v4(8)+v4(7)*v3(8);
    C(85) = v3(1)*v4(4)+v4(1)*v3(4)+v3(2)*v4(5)+v4(2)*v3(5)+v3(3)*v4(6)+v4(3)*v3(6);
    C(86) = v3(1)*v4(7)+v4(1)*v3(7)+v3(2)*v4(8)+v4(2)*v3(8)+v3(3)*v4(9)+v4(3)*v3(9);
    C(128) = v3(1)*v5(2)+v5(1)*v3(2)+v3(4)*v5(5)+v5(4)*v3(5)+v3(7)*v5(8)+v5(7)*v3(8);
    C(125) = v3(1)*v5(4)+v5(1)*v3(4)+v3(2)*v5(5)+v5(2)*v3(5)+v3(3)*v5(6)+v5(3)*v3(6);
    C(126) = v3(1)*v5(7)+v5(1)*v3(7)+v3(2)*v5(8)+v5(2)*v3(8)+v3(3)*v5(9)+v5(3)*v3(9);
    C(173) = 2*v3(1)*v6(1)-2*v3(2)*v6(2)+2*v3(4)*v6(4)-2*v3(5)*v6(5)+2*v3(7)*v6(7)-2*v3(8)*v6(8);
    C(171) = 2*v3(1)*v6(1)+2*v3(2)*v6(2)+2*v3(3)*v6(3)-2*v3(4)*v6(4)-2*v3(5)*v6(5)-2*v3(6)*v6(6);
    C(172) = 2*v3(1)*v6(1)+2*v3(2)*v6(2)+2*v3(3)*v6(3)-2*v3(7)*v6(7)-2*v3(8)*v6(8)-2*v3(9)*v6(9);
    C(178) = v3(1)*v6(2)+v6(1)*v3(2)+v3(4)*v6(5)+v6(4)*v3(5)+v6(7)*v3(8)+v3(7)*v6(8);
    C(179) = v3(1)*v6(3)+v6(1)*v3(3)+v3(4)*v6(6)+v6(4)*v3(6)+v3(7)*v6(9)+v6(7)*v3(9);
    C(175) = v3(1)*v6(4)+v6(1)*v3(4)+v3(2)*v6(5)+v6(2)*v3(5)+v3(3)*v6(6)+v6(3)*v3(6);
    C(176) = v3(1)*v6(7)+v6(1)*v3(7)+v3(2)*v6(8)+v6(2)*v3(8)+v3(3)*v6(9)+v6(3)*v3(9);
    C(180) = v3(2)*v6(3)+v6(2)*v3(3)+v3(5)*v6(6)+v6(5)*v3(6)+v3(8)*v6(9)+v6(8)*v3(9);
    C(81) = 2*v3(3)*v4(3)-2*v3(4)*v4(4)-2*v3(5)*v4(5)-2*v3(6)*v4(6)+2*v3(1)*v4(1)+2*v3(2)*v4(2);
    C(121) = 2*v3(3)*v5(3)-2*v3(4)*v5(4)-2*v3(5)*v5(5)-2*v3(6)*v5(6)+2*v3(1)*v5(1)+2*v3(2)*v5(2);
    C(89) = v3(4)*v4(6)+v4(4)*v3(6)+v3(7)*v4(9)+v4(7)*v3(9)+v3(1)*v4(3)+v4(1)*v3(3);
    C(129) = v3(4)*v5(6)+v5(4)*v3(6)+v3(7)*v5(9)+v5(7)*v3(9)+v3(1)*v5(3)+v5(1)*v3(3);
    C(177) = v3(4)*v6(7)+v6(4)*v3(7)+v3(5)*v6(8)+v6(5)*v3(8)+v3(6)*v6(9)+v6(6)*v3(9);
    C(84) = -2*v3(6)*v4(6)+2*v3(7)*v4(7)-2*v3(9)*v4(9)+2*v3(1)*v4(1)-2*v3(3)*v4(3)+2*v3(4)*v4(4);
    C(124) = -2*v3(6)*v5(6)+2*v3(7)*v5(7)-2*v3(9)*v5(9)+2*v3(1)*v5(1)-2*v3(3)*v5(3)+2*v3(4)*v5(4);
    C(122) = -2*v3(7)*v5(7)-2*v3(8)*v5(8)-2*v3(9)*v5(9)+2*v3(1)*v5(1)+2*v3(2)*v5(2)+2*v3(3)*v5(3);
    C(40) = v3(8)*v1(9)+v1(2)*v3(3)+v3(2)*v1(3)+v1(5)*v3(6)+v3(5)*v1(6)+v1(8)*v3(9);
    C(50) = v3(8)*v2(9)+v2(2)*v3(3)+v3(2)*v2(3)+v2(5)*v3(6)+v3(5)*v2(6)+v2(8)*v3(9);
    C(83) = -2*v3(8)*v4(8)+2*v3(1)*v4(1)-2*v3(2)*v4(2)+2*v3(4)*v4(4)-2*v3(5)*v4(5)+2*v3(7)*v4(7);
    C(82) = -2*v3(8)*v4(8)-2*v3(9)*v4(9)+2*v3(1)*v4(1)+2*v3(2)*v4(2)+2*v3(3)*v4(3)-2*v3(7)*v4(7);
    C(90) = v3(8)*v4(9)+v4(8)*v3(9)+v3(2)*v4(3)+v4(2)*v3(3)+v3(5)*v4(6)+v4(5)*v3(6);
    C(123) = -2*v3(8)*v5(8)+2*v3(1)*v5(1)-2*v3(2)*v5(2)+2*v3(4)*v5(4)-2*v3(5)*v5(5)+2*v3(7)*v5(7);
    C(130) = v3(8)*v5(9)+v5(8)*v3(9)+v3(2)*v5(3)+v5(2)*v3(3)+v3(5)*v5(6)+v5(5)*v3(6);
    C(174) = -2*v3(9)*v6(9)-2*v3(6)*v6(6)+2*v3(7)*v6(7)+2*v3(1)*v6(1)-2*v3(3)*v6(3)+2*v3(4)*v6(4);
    C(65) = v4(1)*v1(4)+v4(2)*v1(5)+v1(3)*v4(6)+v4(3)*v1(6)+v1(1)*v4(4)+v1(2)*v4(5);
    C(138) = v4(1)*v5(2)+v5(1)*v4(2)+v4(4)*v5(5)+v5(4)*v4(5)+v4(7)*v5(8)+v5(7)*v4(8);
    C(135) = v4(1)*v5(4)+v5(1)*v4(4)+v4(2)*v5(5)+v5(2)*v4(5)+v4(3)*v5(6)+v5(3)*v4(6);
    C(136) = v4(1)*v5(7)+v5(1)*v4(7)+v4(2)*v5(8)+v5(2)*v4(8)+v4(3)*v5(9)+v5(3)*v4(9);
    C(183) = 2*v4(1)*v6(1)-2*v4(2)*v6(2)+2*v4(4)*v6(4)-2*v4(5)*v6(5)+2*v4(7)*v6(7)-2*v4(8)*v6(8);
    C(181) = 2*v4(1)*v6(1)+2*v4(2)*v6(2)+2*v4(3)*v6(3)-2*v4(4)*v6(4)-2*v4(5)*v6(5)-2*v4(6)*v6(6);
    C(182) = 2*v4(1)*v6(1)+2*v4(2)*v6(2)+2*v4(3)*v6(3)-2*v4(7)*v6(7)-2*v4(8)*v6(8)-2*v4(9)*v6(9);
    C(188) = v4(1)*v6(2)+v6(1)*v4(2)+v4(4)*v6(5)+v6(7)*v4(8)+v6(4)*v4(5)+v4(7)*v6(8);
    C(189) = v4(1)*v6(3)+v6(1)*v4(3)+v4(4)*v6(6)+v6(4)*v4(6)+v4(7)*v6(9)+v6(7)*v4(9);
    C(185) = v4(1)*v6(4)+v6(1)*v4(4)+v4(2)*v6(5)+v6(2)*v4(5)+v4(3)*v6(6)+v6(3)*v4(6);
    C(186) = v4(1)*v6(7)+v6(1)*v4(7)+v4(2)*v6(8)+v6(2)*v4(8)+v4(3)*v6(9)+v6(3)*v4(9);
    C(190) = v4(2)*v6(3)+v6(2)*v4(3)+v4(5)*v6(6)+v6(5)*v4(6)+v4(8)*v6(9)+v6(8)*v4(9);
    C(131) = 2*v4(3)*v5(3)-2*v4(4)*v5(4)-2*v4(5)*v5(5)-2*v4(6)*v5(6)+2*v4(1)*v5(1)+2*v4(2)*v5(2);
    C(69) = v4(4)*v1(6)+v1(7)*v4(9)+v4(7)*v1(9)+v1(1)*v4(3)+v4(1)*v1(3)+v1(4)*v4(6);
    C(87) = v4(4)*v3(7)+v3(5)*v4(8)+v4(5)*v3(8)+v3(6)*v4(9)+v4(6)*v3(9)+v3(4)*v4(7);
    C(139) = v4(4)*v5(6)+v5(4)*v4(6)+v4(7)*v5(9)+v5(7)*v4(9)+v4(1)*v5(3)+v5(1)*v4(3);
    C(137) = v4(4)*v5(7)+v5(4)*v4(7)+v4(5)*v5(8)+v5(5)*v4(8)+v4(6)*v5(9)+v5(6)*v4(9);
    C(187) = v4(4)*v6(7)+v6(4)*v4(7)+v4(5)*v6(8)+v6(5)*v4(8)+v4(6)*v6(9)+v6(6)*v4(9);
    C(134) = -2*v4(6)*v5(6)+2*v4(7)*v5(7)-2*v4(9)*v5(9)+2*v4(1)*v5(1)-2*v4(3)*v5(3)+2*v4(4)*v5(4);
    C(132) = -2*v4(7)*v5(7)-2*v4(8)*v5(8)-2*v4(9)*v5(9)+2*v4(1)*v5(1)+2*v4(2)*v5(2)+2*v4(3)*v5(3);
    C(70) = v4(8)*v1(9)+v1(2)*v4(3)+v4(2)*v1(3)+v1(5)*v4(6)+v4(5)*v1(6)+v1(8)*v4(9);
    C(80) = v4(8)*v2(9)+v2(2)*v4(3)+v4(2)*v2(3)+v2(5)*v4(6)+v4(5)*v2(6)+v2(8)*v4(9);
    C(133) = -2*v4(8)*v5(8)+2*v4(1)*v5(1)-2*v4(2)*v5(2)+2*v4(4)*v5(4)-2*v4(5)*v5(5)+2*v4(7)*v5(7);
    C(140) = v4(8)*v5(9)+v5(8)*v4(9)+v4(2)*v5(3)+v5(2)*v4(3)+v4(5)*v5(6)+v5(5)*v4(6);
    C(184) = -2*v4(9)*v6(9)+2*v4(4)*v6(4)-2*v4(6)*v6(6)+2*v4(7)*v6(7)+2*v4(1)*v6(1)-2*v4(3)*v6(3);
    C(105) = v5(1)*v1(4)+v1(2)*v5(5)+v5(2)*v1(5)+v1(3)*v5(6)+v5(3)*v1(6)+v1(1)*v5(4);
    C(193) = 2*v5(1)*v6(1)-2*v5(2)*v6(2)+2*v5(4)*v6(4)-2*v5(5)*v6(5)+2*v5(7)*v6(7)-2*v5(8)*v6(8);
    C(191) = 2*v5(1)*v6(1)+2*v5(2)*v6(2)+2*v5(3)*v6(3)-2*v5(4)*v6(4)-2*v5(5)*v6(5)-2*v5(6)*v6(6);
    C(192) = 2*v5(1)*v6(1)+2*v5(2)*v6(2)+2*v5(3)*v6(3)-2*v5(7)*v6(7)-2*v5(8)*v6(8)-2*v5(9)*v6(9);
    C(198) = v5(1)*v6(2)+v6(1)*v5(2)+v5(4)*v6(5)+v5(7)*v6(8)+v6(7)*v5(8)+v6(4)*v5(5);
    C(199) = v5(1)*v6(3)+v6(1)*v5(3)+v5(4)*v6(6)+v6(4)*v5(6)+v5(7)*v6(9)+v6(7)*v5(9);
    C(195) = v5(1)*v6(4)+v6(1)*v5(4)+v5(2)*v6(5)+v6(2)*v5(5)+v5(3)*v6(6)+v6(3)*v5(6);
    C(196) = v5(1)*v6(7)+v6(1)*v5(7)+v5(2)*v6(8)+v6(2)*v5(8)+v5(3)*v6(9)+v6(3)*v5(9);
    C(200) = v5(2)*v6(3)+v6(2)*v5(3)+v5(5)*v6(6)+v6(5)*v5(6)+v5(8)*v6(9)+v6(8)*v5(9);
    C(109) = v5(4)*v1(6)+v1(7)*v5(9)+v1(1)*v5(3)+v5(7)*v1(9)+v5(1)*v1(3)+v1(4)*v5(6);
    C(107) = v5(4)*v1(7)+v1(5)*v5(8)+v5(5)*v1(8)+v1(6)*v5(9)+v5(6)*v1(9)+v1(4)*v5(7);
    C(117) = v5(4)*v2(7)+v2(5)*v5(8)+v5(5)*v2(8)+v2(6)*v5(9)+v5(6)*v2(9)+v2(4)*v5(7);
    C(127) = v5(4)*v3(7)+v3(5)*v5(8)+v5(5)*v3(8)+v3(6)*v5(9)+v5(6)*v3(9)+v3(4)*v5(7);
    C(197) = v5(4)*v6(7)+v6(4)*v5(7)+v6(6)*v5(9)+v5(5)*v6(8)+v6(5)*v5(8)+v5(6)*v6(9);
    C(110) = v5(8)*v1(9)+v1(2)*v5(3)+v5(2)*v1(3)+v1(5)*v5(6)+v5(5)*v1(6)+v1(8)*v5(9);
    C(194) = -2*v5(9)*v6(9)+2*v5(4)*v6(4)-2*v5(6)*v6(6)+2*v5(7)*v6(7)+2*v5(1)*v6(1)-2*v5(3)*v6(3);
    C(157) = v6(4)*v1(7)+v1(5)*v6(8)+v1(4)*v6(7)+v6(5)*v1(8)+v1(6)*v6(9)+v6(6)*v1(9);
    C(167) = v6(4)*v2(7)+v2(4)*v6(7)+v2(5)*v6(8)+v6(5)*v2(8)+v2(6)*v6(9)+v6(6)*v2(9);

    C = C./repmat(sqrt(sum(C.^2,2)),1,size(C,2));

end