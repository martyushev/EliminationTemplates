function [C,M] = coefs_focal6p(data)

    x1 = data{1};
    x2 = data{2};

    M = [x1(1,:).*x2(1,:); x1(2,:).*x2(1,:); x1(3,:).*x2(1,:);...
        x1(1,:).*x2(2,:); x1(2,:).*x2(2,:); x1(3,:).*x2(2,:);...
        x1(1,:).*x2(3,:); x1(2,:).*x2(3,:); x1(3,:).*x2(3,:)]';

    M = M(:,1:6)\M(:,7:end);
    f1 = -M(:,3);
    f2 = -M(:,2);
    f3 = -M(:,1);

    % G = F*w*F'*w;
    G(5) = f1(3)^2;
    G(49) = f1(6)^2;
    G(6) = f2(3)^2;
    G(50) = f2(6)^2;
    G(7) = f3(3)^2;
    G(51) = f3(6)^2;
    G([17,37]) = f1(3)*f1(6);
    G([18,38]) = f2(3)*f2(6);
    G([19,39]) = f3(3)*f3(6);
    G(10) = 2*f2(3)*f1(3);
    G(2) = 2*f2(3)*f3(3);
    G(54) = 2*f2(6)*f1(6);
    G(46) = 2*f2(6)*f3(6);
    G(11) = 2*f3(3)*f1(3);
    G(55) = 2*f3(6)*f1(6);
    G(1) = f1(1)^2+f1(2)^2;
    G(45) = f1(4)^2+f1(5)^2;
    G(8) = f2(1)^2+f2(2)^2;
    G(52) = f2(4)^2+f2(5)^2;
    G(9) = f3(1)^2+f3(2)^2;
    G(53) = f3(4)^2+f3(5)^2;
    G([13,33]) = f1(1)*f1(4)+f1(2)*f1(5);
    G(3) = 2*f2(1)*f1(1)+2*f2(2)*f1(2);
    G([20,40]) = f2(1)*f2(4)+f2(2)*f2(5);
    G(12) = 2*f2(1)*f3(1)+2*f2(2)*f3(2);
    G([22,42]) = f2(3)*f1(6)+f1(3)*f2(6);
    G([14,34]) = f2(3)*f3(6)+f3(3)*f2(6);
    G(47) = 2*f2(4)*f1(4)+2*f2(5)*f1(5);
    G(56) = 2*f2(4)*f3(4)+2*f2(5)*f3(5);
    G(4) = 2*f3(1)*f1(1)+2*f3(2)*f1(2);
    G([21,41]) = f3(1)*f3(4)+f3(2)*f3(5);
    G([23,43]) = f3(3)*f1(6)+f1(3)*f3(6);
    G(48) = 2*f3(4)*f1(4)+2*f3(5)*f1(5);
    G([65,32]) = f2(1)+f3(2);
    G([73,64]) = f2(4)+f3(5);
    G([15,35]) = f2(1)*f1(4)+f1(1)*f2(4)+f2(2)*f1(5)+f1(2)*f2(5);
    G([24,44]) = f2(1)*f3(4)+f3(1)*f2(4)+f2(2)*f3(5)+f3(2)*f2(5);
    G([16,36]) = f3(1)*f1(4)+f1(1)*f3(4)+f3(2)*f1(5)+f1(2)*f3(5);
    G([26,72]) = f1(1);
    G([25,71]) = f1(2);
    G([27,70]) = f1(3);
    G([58,80]) = f1(4);
    G([57,79]) = f1(5);
    G([59,78]) = f1(6);
    G([67,28]) = f2(2);
    G([66,30]) = f2(3);
    G([75,60]) = f2(5);
    G([74,62]) = f2(6);
    G([68,29]) = f3(1);
    G([69,31]) = f3(3);
    G([76,61]) = f3(4);
    G([77,63]) = f3(6);

    C = zeros(10,26);

    C([78,107,169]) = 1;
    C([2,21]) = 2*G(66);
    C([22,41]) = 2*G(69);
    C([5,24]) = 2*G(74);
    C([25,44]) = 2*G(77);
    C(161) = -f1(1);
    C(162) = -f1(2);
    C(164) = -f1(4);
    C(165) = -f1(5);
    C(71) = -f2(1);
    C(74) = -f2(4);
    C(102) = -f3(2);
    C(105) = -f3(5);
    C(237) = 2*G(25)*f1(1)+2*G(57)*f1(4);
    C(248) = 2*G(26)*f1(2)+2*G(58)*f1(5);
    C(227) = 2*G(27)*f1(1)+2*G(59)*f1(4);
    C(97) = 2*G(28)*f2(1)+2*G(60)*f2(4);
    C(99) = 2*G(28)*f2(3)+2*G(60)*f2(6);
    C(158) = 2*G(29)*f3(2)+2*G(61)*f3(5);
    C(159) = 2*G(29)*f3(3)+2*G(61)*f3(6);
    C(87) = 2*G(30)*f2(1)+2*G(62)*f2(4);
    C(138) = 2*G(31)*f3(2)+2*G(63)*f3(5);
    C(228) = 2*G(59)*f1(5)+2*G(27)*f1(2);
    C(260) = f1(1)*f1(5)-f1(4)*f1(2);
    C(100) = -f2(1)*f2(6)+f2(4)*f2(3);
    C(160) = -f3(5)*f3(3)+f3(6)*f3(2);
    C(259) = -G(1)-G(45);
    C([38,57]) = -G(2)-G(46);
    C(101) = 2*G(70)-f3(1);
    C(76) = 2*G(74)-f2(6);
    C(106) = 2*G(77)-f3(6);
    C(75) = 2*G(78)-f2(5);
    C(104) = 2*G(78)-f3(4);
    C(163) = -f1(3)+2*G(70);
    C(166) = -f1(6)+2*G(78);
    C(72) = -f2(2)+2*G(70);
    C(73) = -f2(3)+2*G(66);
    C(103) = -f3(3)+2*G(69);
    C([18,37]) = 1-G(6)-G(50);
    C([58,67]) = 1-G(7)-G(51);
    C(223) = G(5)*f1(3)+2*G(37)*f1(6)-G(49)*f1(3);
    C(91) = G(8)*f2(1)+2*G(40)*f2(4)-G(52)*f2(1);
    C(93) = G(8)*f2(3)+2*G(40)*f2(6)-G(52)*f2(3);
    C(255) = 2*G(13)*f1(2)+G(45)*f1(5)-G(1)*f1(5);
    C(224) = 2*G(17)*f1(1)+G(49)*f1(4)-G(5)*f1(4);
    C(225) = 2*G(17)*f1(2)+G(49)*f1(5)-G(5)*f1(5);
    C(226) = 2*G(17)*f1(3)+G(49)*f1(6)-G(5)*f1(6);
    C(94) = 2*G(20)*f2(1)+G(52)*f2(4)-G(8)*f2(4);
    C(95) = 2*G(20)*f2(2)+G(52)*f2(5)-G(8)*f2(5);
    C(96) = 2*G(20)*f2(3)+G(52)*f2(6)-G(8)*f2(6);
    C(154) = 2*G(21)*f3(1)+G(53)*f3(4)-G(9)*f3(4);
    C(155) = 2*G(21)*f3(2)+G(53)*f3(5)-G(9)*f3(5);
    C(156) = 2*G(21)*f3(3)+G(53)*f3(6)-G(9)*f3(6);
    C(252) = 2*G(33)*f1(5)+G(1)*f1(2)-G(45)*f1(2);
    C(221) = 2*G(37)*f1(4)+G(5)*f1(1)-G(49)*f1(1);
    C(222) = 2*G(37)*f1(5)-G(49)*f1(2)+G(5)*f1(2);
    C(92) = 2*G(40)*f2(5)-G(52)*f2(2)+G(8)*f2(2);
    C(151) = 2*G(41)*f3(4)+G(9)*f3(1)-G(53)*f3(1);
    C(152) = 2*G(41)*f3(5)-G(53)*f3(2)+G(9)*f3(2);
    C(251) = -G(45)*f1(1)+2*G(33)*f1(4)+G(1)*f1(1);
    C(253) = -G(45)*f1(3)+2*G(33)*f1(6)+G(1)*f1(3);
    C(254) = G(45)*f1(4)+2*G(13)*f1(1)-G(1)*f1(4);
    C(256) = G(45)*f1(6)+2*G(13)*f1(3)-G(1)*f1(6);
    C(153) = -G(53)*f3(3)+G(9)*f3(3)+2*G(41)*f3(6);
    C(238) = 2*G(25)*f1(2)+2*G(57)*f1(5)-G(45)-G(1);
    C(239) = 2*G(25)*f1(3)+2*G(57)*f1(6)-G(47)-G(3);
    C(187) = 2*G(25)*f2(1)+2*G(28)*f1(1)+2*G(57)*f2(4)+2*G(60)*f1(4);
    C(247) = 2*G(26)*f1(1)+2*G(58)*f1(4)-G(1)-G(45);
    C(249) = 2*G(26)*f1(3)+2*G(58)*f1(6)-G(4)-G(48);
    C(218) = 2*G(26)*f3(2)+2*G(29)*f1(2)+2*G(58)*f3(5)+2*G(61)*f1(5);
    C(229) = 2*G(27)*f1(3)+2*G(59)*f1(6)-G(5)-G(49);
    C(198) = 2*G(27)*f3(2)+2*G(31)*f1(2)+2*G(59)*f3(5)+2*G(63)*f1(5);
    C(129) = 2*G(28)*f3(3)+2*G(32)*f2(3)+2*G(60)*f3(6)+2*G(64)*f2(6);
    C(149) = 2*G(29)*f2(3)+2*G(32)*f3(3)+2*G(61)*f2(6)+2*G(64)*f3(6);
    C(157) = 2*G(29)*f3(1)+2*G(61)*f3(4)-G(9)-G(53);
    C(88) = 2*G(30)*f2(2)+2*G(62)*f2(5)-G(54)-G(10);
    C(11) = -G(50)*f2(1)+G(6)*f2(1)+2*G(38)*f2(4)-f2(1);
    C(98) = 2*G(60)*f2(5)+2*G(28)*f2(2)-G(52)-G(8);
    C(177) = 2*G(62)*f1(4)+2*G(27)*f2(1)+2*G(30)*f1(1)+2*G(59)*f2(4);
    C(137) = 2*G(63)*f3(4)+2*G(31)*f3(1)-G(11)-G(55);
    C(13) = -f2(3)+G(6)*f2(3)+2*G(38)*f2(6)-G(50)*f2(3);
    C(14) = -f2(4)+2*G(18)*f2(1)+G(50)*f2(4)-G(6)*f2(4);
    C(16) = -f2(6)-G(6)*f2(6)+2*G(18)*f2(3)+G(50)*f2(6);
    C(62) = -f3(2)+G(7)*f3(2)+2*G(39)*f3(5)-G(51)*f3(2);
    C(63) = -f3(3)+G(7)*f3(3)+2*G(39)*f3(6)-G(51)*f3(3);
    C(65) = -f3(5)-G(7)*f3(5)+2*G(19)*f3(2)+G(51)*f3(5);
    C(66) = -f3(6)-G(7)*f3(6)+2*G(19)*f3(3)+G(51)*f3(6);
    C(89) = 1+2*G(30)*f2(3)+2*G(62)*f2(6)-G(6)-G(50);
    C(139) = 1+2*G(63)*f3(6)+2*G(31)*f3(3)-G(7)-G(51);
    C(61) = -G(51)*f3(1)+G(7)*f3(1)+2*G(39)*f3(4)+2*G(68)-f3(1);
    C(12) = -f2(2)+G(6)*f2(2)+2*G(38)*f2(5)-G(50)*f2(2)+2*G(67);
    C(15) = -f2(5)-G(6)*f2(5)+2*G(18)*f2(2)+G(50)*f2(5)+2*G(75);
    C(64) = -f3(4)+2*G(19)*f3(1)+G(51)*f3(4)-G(7)*f3(4)+2*G(76);
    C(231) = G(1)*f2(1)+G(3)*f1(1)+2*G(33)*f2(4)+2*G(35)*f1(4)-G(45)*f2(1)-G(47)*f1(1);
    C(232) = G(1)*f2(2)-G(45)*f2(2)-G(47)*f1(2)+G(3)*f1(2)+2*G(33)*f2(5)+2*G(35)*f1(5);
    C(234) = -G(1)*f2(4)+2*G(13)*f2(1)+2*G(15)*f1(1)+G(45)*f2(4)+G(47)*f1(4)-G(3)*f1(4);
    C(235) = -G(1)*f2(5)+G(45)*f2(5)+G(47)*f1(5)-G(3)*f1(5)+2*G(13)*f2(2)+2*G(15)*f1(2);
    C(241) = G(1)*f3(1)+G(4)*f1(1)+2*G(33)*f3(4)+2*G(36)*f1(4)-G(45)*f3(1)-G(48)*f1(1);
    C(242) = G(1)*f3(2)-G(45)*f3(2)-G(48)*f1(2)+G(4)*f1(2)+2*G(33)*f3(5)+2*G(36)*f1(5);
    C(244) = -G(1)*f3(4)+2*G(13)*f3(1)+2*G(16)*f1(1)+G(45)*f3(4)+G(48)*f1(4)-G(4)*f1(4);
    C(245) = -G(1)*f3(5)+2*G(16)*f1(2)+G(45)*f3(5)+G(48)*f1(5)-G(4)*f1(5)+2*G(13)*f3(2);
    C(233) = G(3)*f1(3)+2*G(33)*f2(6)+2*G(35)*f1(6)-G(45)*f2(3)+G(1)*f2(3)-G(47)*f1(3);
    C(243) = G(4)*f1(3)+2*G(33)*f3(6)+2*G(36)*f1(6)-G(45)*f3(3)+G(1)*f3(3)-G(48)*f1(3);
    C(172) = G(5)*f2(2)+G(10)*f1(2)+2*G(42)*f1(5)-G(54)*f1(2)-G(49)*f2(2)+2*G(37)*f2(5);
    C(192) = G(5)*f3(2)+G(11)*f1(2)+2*G(43)*f1(5)-G(55)*f1(2)-G(49)*f3(2)+2*G(37)*f3(5);
    C(122) = G(8)*f3(2)+G(12)*f2(2)+2*G(40)*f3(5)+2*G(44)*f2(5)-G(56)*f2(2)-G(52)*f3(2);
    C(123) = G(8)*f3(3)+G(12)*f2(3)+2*G(40)*f3(6)+2*G(44)*f2(6)-G(56)*f2(3)-G(52)*f3(3);
    C(126) = -G(8)*f3(6)+2*G(20)*f3(3)+2*G(24)*f2(3)+G(52)*f3(6)+G(56)*f2(6)-G(12)*f2(6);
    C(142) = G(9)*f2(2)+G(12)*f3(2)+2*G(41)*f2(5)+2*G(44)*f3(5)-G(56)*f3(2)-G(53)*f2(2);
    C(143) = G(9)*f2(3)+G(12)*f3(3)+2*G(41)*f2(6)+2*G(44)*f3(6)-G(56)*f3(3)-G(53)*f2(3);
    C(146) = -G(9)*f2(6)+2*G(21)*f2(3)+2*G(24)*f3(3)+G(53)*f2(6)+G(56)*f3(6)-G(12)*f3(6);
    C(236) = 2*G(15)*f1(3)+G(45)*f2(6)+G(47)*f1(6)-G(1)*f2(6)-G(3)*f1(6)+2*G(13)*f2(3);
    C(184) = 2*G(15)*f2(1)+2*G(20)*f1(1)+G(47)*f2(4)+G(52)*f1(4)-G(3)*f2(4)-G(8)*f1(4);
    C(186) = 2*G(15)*f2(3)+2*G(20)*f1(3)+G(47)*f2(6)+G(52)*f1(6)-G(3)*f2(6)-G(8)*f1(6);
    C(246) = 2*G(16)*f1(3)+G(45)*f3(6)+G(48)*f1(6)-G(1)*f3(6)-G(4)*f1(6)+2*G(13)*f3(3);
    C(214) = 2*G(16)*f3(1)+2*G(21)*f1(1)+G(48)*f3(4)+G(53)*f1(4)-G(4)*f3(4)-G(9)*f1(4);
    C(216) = 2*G(16)*f3(3)+2*G(21)*f1(3)+G(48)*f3(6)+G(53)*f1(6)-G(4)*f3(6)-G(9)*f1(6);
    C(174) = 2*G(17)*f2(1)+2*G(22)*f1(1)+G(49)*f2(4)+G(54)*f1(4)-G(10)*f1(4)-G(5)*f2(4);
    C(175) = 2*G(17)*f2(2)+2*G(22)*f1(2)+G(49)*f2(5)-G(10)*f1(5)-G(5)*f2(5)+G(54)*f1(5);
    C(194) = 2*G(17)*f3(1)+2*G(23)*f1(1)+G(49)*f3(4)+G(55)*f1(4)-G(11)*f1(4)-G(5)*f3(4);
    C(195) = 2*G(17)*f3(2)+2*G(23)*f1(2)+G(49)*f3(5)-G(5)*f3(5)+G(55)*f1(5)-G(11)*f1(5);
    C(185) = 2*G(20)*f1(2)+G(47)*f2(5)+G(52)*f1(5)-G(3)*f2(5)-G(8)*f1(5)+2*G(15)*f2(2);
    C(124) = 2*G(20)*f3(1)+2*G(24)*f2(1)+G(52)*f3(4)+G(56)*f2(4)-G(12)*f2(4)-G(8)*f3(4);
    C(125) = 2*G(20)*f3(2)+2*G(24)*f2(2)-G(12)*f2(5)-G(8)*f3(5)+G(52)*f3(5)+G(56)*f2(5);
    C(215) = 2*G(21)*f1(2)+G(48)*f3(5)+G(53)*f1(5)-G(4)*f3(5)-G(9)*f1(5)+2*G(16)*f3(2);
    C(144) = 2*G(21)*f2(1)+2*G(24)*f3(1)+G(53)*f2(4)+G(56)*f3(4)-G(12)*f3(4)-G(9)*f2(4);
    C(145) = 2*G(21)*f2(2)+2*G(24)*f3(2)-G(12)*f3(5)-G(9)*f2(5)+G(53)*f2(5)+G(56)*f3(5);
    C(189) = 2*G(25)*f2(3)+2*G(28)*f1(3)+2*G(57)*f2(6)+2*G(60)*f1(6)-G(52)-G(8);
    C(217) = 2*G(26)*f3(1)+2*G(29)*f1(1)+2*G(58)*f3(4)+2*G(61)*f1(4)-G(4)-G(48);
    C(219) = 2*G(26)*f3(3)+2*G(29)*f1(3)+2*G(58)*f3(6)+2*G(61)*f1(6)-G(53)-G(9);
    C(178) = 2*G(27)*f2(2)+2*G(30)*f1(2)+2*G(59)*f2(5)+2*G(62)*f1(5)-G(5)-G(49);
    C(179) = 2*G(27)*f2(3)+2*G(30)*f1(3)+2*G(59)*f2(6)+2*G(62)*f1(6)-G(10)-G(54);
    C(199) = 2*G(27)*f3(3)+2*G(31)*f1(3)+2*G(59)*f3(6)+2*G(63)*f1(6)-G(11)-G(55);
    C(188) = 2*G(28)*f1(2)+2*G(57)*f2(5)+2*G(60)*f1(5)+2*G(25)*f2(2)-G(3)-G(47);
    C(119) = 2*G(30)*f3(3)+2*G(31)*f2(3)+2*G(62)*f3(6)+2*G(63)*f2(6)-G(2)-G(46);
    C(181) = 2*G(40)*f1(4)+G(3)*f2(1)+G(8)*f1(1)+2*G(35)*f2(4)-G(47)*f2(1)-G(52)*f1(1);
    C(182) = 2*G(40)*f1(5)-G(47)*f2(2)-G(52)*f1(2)+G(3)*f2(2)+G(8)*f1(2)+2*G(35)*f2(5);
    C(211) = 2*G(41)*f1(4)+G(4)*f3(1)+G(9)*f1(1)+2*G(36)*f3(4)-G(48)*f3(1)-G(53)*f1(1);
    C(212) = 2*G(41)*f1(5)-G(48)*f3(2)-G(53)*f1(2)+G(4)*f3(2)+G(9)*f1(2)+2*G(36)*f3(5);
    C(141) = 2*G(44)*f3(4)-G(56)*f3(1)-G(53)*f2(1)+G(9)*f2(1)+G(12)*f3(1)+2*G(41)*f2(4);
    C(183) = -G(52)*f1(3)+G(3)*f2(3)+G(8)*f1(3)+2*G(35)*f2(6)+2*G(40)*f1(6)-G(47)*f2(3);
    C(213) = -G(53)*f1(3)+G(4)*f3(3)+G(9)*f1(3)+2*G(36)*f3(6)+2*G(41)*f1(6)-G(48)*f3(3);
    C(171) = -G(54)*f1(1)+G(5)*f2(1)-G(49)*f2(1)+2*G(37)*f2(4)+G(10)*f1(1)+2*G(42)*f1(4);
    C(191) = -G(55)*f1(1)+G(5)*f3(1)-G(49)*f3(1)+2*G(37)*f3(4)+G(11)*f1(1)+2*G(43)*f1(4);
    C(121) = -G(56)*f2(1)-G(52)*f3(1)+G(8)*f3(1)+G(12)*f2(1)+2*G(40)*f3(4)+2*G(44)*f2(4);
    C(197) = 2*G(63)*f1(4)+2*G(27)*f3(1)+2*G(31)*f1(1)+2*G(59)*f3(4)-G(5)-G(49);
    C(127) = 2*G(64)*f2(4)+2*G(28)*f3(1)+2*G(32)*f2(1)+2*G(60)*f3(4)-G(8)-G(52);
    C(128) = 2*G(64)*f2(5)+2*G(28)*f3(2)+2*G(32)*f2(2)+2*G(60)*f3(5)-G(56)-G(12);
    C(147) = 2*G(64)*f3(4)+2*G(29)*f2(1)+2*G(32)*f3(1)+2*G(61)*f2(4)-G(12)-G(56);
    C(148) = 2*G(64)*f3(5)+2*G(29)*f2(2)+2*G(32)*f3(2)+2*G(61)*f2(5)-G(9)-G(53);
    C(250) = -f1(5)*f1(3)+f1(6)*f1(2)-f3(4)*f1(2)-f1(4)*f3(2)+f3(1)*f1(5)+f1(1)*f3(5);
    C(190) = f2(1)*f2(5)-f2(1)*f1(6)-f1(1)*f2(6)-f2(4)*f2(2)+f2(4)*f1(3)+f1(4)*f2(3);
    C(130) = -f2(1)*f3(6)-f3(1)*f2(6)-f2(5)*f2(3)+f2(6)*f2(2)+f2(4)*f3(3)+f3(4)*f2(3);
    C(240) = -f2(4)*f1(2)-f1(4)*f2(2)+f1(4)*f1(3)+f2(1)*f1(5)+f1(1)*f2(5)-f1(1)*f1(6);
    C(220) = f3(1)*f3(5)-f3(5)*f1(3)-f1(5)*f3(3)+f3(6)*f1(2)+f1(6)*f3(2)-f3(4)*f3(2);
    C(150) = -f3(1)*f3(6)-f2(5)*f3(3)-f3(5)*f2(3)+f2(6)*f3(2)+f3(6)*f2(2)+f3(4)*f3(3);
    C(117) = -G(10)-G(54)+2*G(30)*f3(1)+2*G(31)*f2(1)+2*G(62)*f3(4)+2*G(63)*f2(4);
    C(118) = -G(11)-G(55)+2*G(30)*f3(2)+2*G(31)*f2(2)+2*G(62)*f3(5)+2*G(63)*f2(5);
    C(176) = -G(5)*f2(6)+2*G(17)*f2(3)+2*G(22)*f1(3)+G(49)*f2(6)+G(54)*f1(6)-G(10)*f1(6)+2*G(79);
    C(132) = G(7)*f1(2)+G(11)*f3(2)+2*G(39)*f1(5)+2*G(43)*f3(5)-G(55)*f3(2)-G(51)*f1(2)-f1(2);
    C(135) = -G(7)*f1(5)+2*G(19)*f1(2)+2*G(23)*f3(2)+G(51)*f1(5)+G(55)*f3(5)-G(11)*f3(5)-f1(5);
    C(196) = -G(11)*f1(6)-G(5)*f3(6)+2*G(17)*f3(3)+2*G(23)*f1(3)+G(49)*f3(6)+G(55)*f1(6)+2*G(80);
    C(84) = 2*G(18)*f1(1)+2*G(22)*f2(1)+G(50)*f1(4)+G(54)*f2(4)-G(6)*f1(4)-G(10)*f2(4)-f1(4);
    C(173) = 2*G(37)*f2(6)+G(5)*f2(3)+G(10)*f1(3)+2*G(42)*f1(6)-G(54)*f1(3)-G(49)*f2(3)+2*G(71);
    C(81) = -G(54)*f2(1)-G(50)*f1(1)+G(6)*f1(1)+G(10)*f2(1)+2*G(38)*f1(4)+2*G(42)*f2(4)-f1(1);
    C(193) = -G(55)*f1(3)+2*G(37)*f3(6)+G(5)*f3(3)+G(11)*f1(3)+2*G(43)*f1(6)-G(49)*f3(3)+2*G(72);
    C(53) = -f2(3)+G(7)*f2(3)+2*G(34)*f3(6)+2*G(39)*f2(6)-G(51)*f2(3)-G(46)*f3(3)+G(2)*f3(3);
    C(56) = -f2(6)+2*G(14)*f3(3)+G(51)*f2(6)-G(7)*f2(6)-G(2)*f3(6)+2*G(19)*f2(3)+G(46)*f3(6);
    C(33) = -f3(3)+G(6)*f3(3)+2*G(34)*f2(6)+2*G(38)*f3(6)-G(50)*f3(3)-G(46)*f2(3)+G(2)*f2(3);
    C(36) = -f3(6)+2*G(14)*f2(3)-G(6)*f3(6)-G(2)*f2(6)+2*G(18)*f3(3)+G(46)*f2(6)+G(50)*f3(6);
    C(82) = G(6)*f1(2)+G(10)*f2(2)+2*G(38)*f1(5)+2*G(42)*f2(5)-G(54)*f2(2)-G(50)*f1(2)+2*G(71)-f1(2);
    C(85) = -G(6)*f1(5)+2*G(18)*f1(2)+2*G(22)*f2(2)+G(50)*f1(5)-G(10)*f2(5)+G(54)*f2(5)+2*G(79)-f1(5);
    C(134) = 2*G(19)*f1(1)+2*G(23)*f3(1)+G(51)*f1(4)+G(55)*f3(4)-G(11)*f3(4)-G(7)*f1(4)+2*G(80)-f1(4);
    C(209) = 2*G(26)*f2(3)+2*G(32)*f1(3)+2*G(57)*f3(6)+2*G(58)*f2(6)+2*G(64)*f1(6)+2*G(25)*f3(3)-G(12)-G(56);
    C(31) = -G(50)*f3(1)-G(46)*f2(1)+G(2)*f2(1)+G(6)*f3(1)+2*G(34)*f2(4)+2*G(38)*f3(4)-f3(1)+2*G(67);
    C(51) = -G(51)*f2(1)-G(46)*f3(1)+G(2)*f3(1)+G(7)*f2(1)+2*G(34)*f3(4)+2*G(39)*f2(4)-f2(1)+2*G(65);
    C(131) = -G(55)*f3(1)-G(51)*f1(1)+G(7)*f1(1)+G(11)*f3(1)+2*G(39)*f1(4)+2*G(43)*f3(4)+2*G(72)-f1(1);
    C(207) = 2*G(64)*f1(4)+2*G(25)*f3(1)+2*G(26)*f2(1)+2*G(32)*f1(1)+2*G(57)*f3(4)+2*G(58)*f2(4)-G(3)-G(47);
    C(208) = 2*G(64)*f1(5)+2*G(25)*f3(2)+2*G(26)*f2(2)+2*G(32)*f1(2)+2*G(57)*f3(5)+2*G(58)*f2(5)-G(4)-G(48);
    C(54) = 2*G(73)-f2(4)-G(2)*f3(4)-G(7)*f2(4)+2*G(14)*f3(1)+2*G(19)*f2(1)+G(46)*f3(4)+G(51)*f2(4);
    C(34) = 2*G(75)-f3(4)-G(2)*f2(4)+2*G(14)*f2(1)+2*G(18)*f3(1)+G(46)*f2(4)+G(50)*f3(4)-G(6)*f3(4);
    C(83) = -f1(3)-G(54)*f2(3)+G(6)*f1(3)+G(10)*f2(3)+2*G(38)*f1(6)+2*G(42)*f2(6)-G(50)*f1(3)+2*G(67);
    C(133) = -f1(3)-G(55)*f3(3)+G(7)*f1(3)+G(11)*f3(3)+2*G(39)*f1(6)+2*G(43)*f3(6)-G(51)*f1(3)+2*G(68);
    C(86) = -f1(6)-G(6)*f1(6)+2*G(18)*f1(3)+2*G(22)*f2(3)+G(50)*f1(6)+G(54)*f2(6)-G(10)*f2(6)+2*G(75);
    C(136) = -f1(6)+2*G(19)*f1(3)+2*G(23)*f3(3)+G(51)*f1(6)+G(55)*f3(6)-G(11)*f3(6)-G(7)*f1(6)+2*G(76);
    C(52) = -f2(2)+2*G(68)-G(46)*f3(2)+G(2)*f3(2)+G(7)*f2(2)+2*G(34)*f3(5)+2*G(39)*f2(5)-G(51)*f2(2);
    C(55) = -f2(5)+2*G(76)+2*G(14)*f3(2)+2*G(19)*f2(2)+G(46)*f3(5)+G(51)*f2(5)-G(7)*f2(5)-G(2)*f3(5);
    C(32) = -f3(2)-G(50)*f3(2)-G(46)*f2(2)+G(2)*f2(2)+G(6)*f3(2)+2*G(34)*f2(5)+2*G(38)*f3(5)+2*G(65);
    C(35) = -f3(5)+2*G(73)+2*G(14)*f2(2)+2*G(18)*f3(2)+G(46)*f2(5)+G(50)*f3(5)-G(6)*f3(5)-G(2)*f2(5);
    C(202) = G(3)*f3(2)+G(4)*f2(2)+G(12)*f1(2)+2*G(35)*f3(5)+2*G(36)*f2(5)+2*G(44)*f1(5)-G(56)*f1(2)-G(47)*f3(2)-G(48)*f2(2);
    C(203) = G(3)*f3(3)+G(4)*f2(3)+G(12)*f1(3)+2*G(35)*f3(6)+2*G(36)*f2(6)+2*G(44)*f1(6)-G(56)*f1(3)-G(47)*f3(3)-G(48)*f2(3);
    C(204) = 2*G(15)*f3(1)+2*G(16)*f2(1)+2*G(24)*f1(1)+G(47)*f3(4)+G(48)*f2(4)+G(56)*f1(4)-G(12)*f1(4)-G(3)*f3(4)-G(4)*f2(4);
    C(205) = 2*G(15)*f3(2)+2*G(16)*f2(2)+2*G(24)*f1(2)+G(47)*f3(5)+G(48)*f2(5)-G(12)*f1(5)-G(3)*f3(5)-G(4)*f2(5)+G(56)*f1(5);
    C(206) = 2*G(15)*f3(3)+2*G(16)*f2(3)+2*G(24)*f1(3)+G(47)*f3(6)+G(48)*f2(6)+G(56)*f1(6)-G(12)*f1(6)-G(3)*f3(6)-G(4)*f2(6);
    C(201) = 2*G(44)*f1(4)+G(3)*f3(1)+G(4)*f2(1)-G(56)*f1(1)-G(47)*f3(1)-G(48)*f2(1)+G(12)*f1(1)+2*G(35)*f3(4)+2*G(36)*f2(4);
    C(111) = 2*G(43)*f2(4)-G(55)*f2(1)-G(54)*f3(1)-G(46)*f1(1)+G(2)*f1(1)+G(10)*f3(1)+G(11)*f2(1)+2*G(34)*f1(4)+2*G(42)*f3(4)+2*G(71);
    C(112) = -G(46)*f1(2)+G(2)*f1(2)+G(10)*f3(2)+G(11)*f2(2)+2*G(34)*f1(5)+2*G(42)*f3(5)+2*G(43)*f2(5)-G(55)*f2(2)-G(54)*f3(2)+2*G(72);
    C(113) = 2*G(65)+G(10)*f3(3)+G(11)*f2(3)+2*G(34)*f1(6)+2*G(42)*f3(6)+2*G(43)*f2(6)-G(55)*f2(3)-G(54)*f3(3)-G(46)*f1(3)+G(2)*f1(3);
    C(116) = 2*G(73)+2*G(14)*f1(3)+G(54)*f3(6)+G(55)*f2(6)-G(11)*f2(6)-G(10)*f3(6)-G(2)*f1(6)+2*G(22)*f3(3)+2*G(23)*f2(3)+G(46)*f1(6);
    C(114) = 2*G(79)-G(2)*f1(4)-G(10)*f3(4)+2*G(14)*f1(1)+2*G(22)*f3(1)+2*G(23)*f2(1)+G(46)*f1(4)+G(54)*f3(4)+G(55)*f2(4)-G(11)*f2(4);
    C(115) = 2*G(80)+2*G(14)*f1(2)+2*G(22)*f3(2)+2*G(23)*f2(2)+G(46)*f1(5)+G(54)*f3(5)+G(55)*f2(5)-G(11)*f2(5)-G(10)*f3(5)-G(2)*f1(5);
    C(210) = f2(1)*f3(5)+f3(1)*f2(5)-f3(1)*f1(6)-f1(1)*f3(6)-f2(5)*f1(3)-f1(5)*f2(3)+f2(6)*f1(2)+f1(6)*f2(2)-f2(4)*f3(2)-f3(4)*f2(2)+f3(4)*f1(3)+f1(4)*f3(3);

    C = C./repmat(sqrt(sum(C.^2,2)),1,size(C,2));

end