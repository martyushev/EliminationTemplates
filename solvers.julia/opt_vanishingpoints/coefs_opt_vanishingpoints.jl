function coefs_opt_vanishingpoints(data::Vector{Matrix{Float64}})

    M1 = data[1]
    M2 = data[2]
    M3 = data[3]

    C = zeros(4,76)
    C[[256,268,284,304]] .= -1
    C[288] = 1
    C[[5,10,31,273,278,283]] .= -16*M1[2]+16*M2[2]
    C[[102,235]] .= -12*M1[2]+12*M2[2]
    C[109] = -4*M1[2]+4*M2[2]
    C[[86,287]] .= 4*M1[2]-4*M2[2]
    C[[13,18,39,173,178,183]] .= 16*M1[2]-16*M2[2]
    C[87] = 4*M1[3]-4*M3[3]
    C[93] = -12*M2[2]+12*M1[2]
    C[[159,185]] .= -12*M2[5]+12*M3[5]
    C[170] = -4*M2[5]+4*M3[5]
    C[[61,66,75,261,266,279]] .= -16*M3[3]+16*M1[3]
    C[[121,202]] .= -12*M3[3]+12*M1[3]
    C[[169,286]] .= 4*M3[3]-4*M1[3]
    C[151] = 12*M3[3]-12*M1[3]
    C[[25,30,47,113,118,147]] .= 16*M3[3]-16*M1[3]
    C[[65,70,79,89,98,127]] .= -16*M3[5]+16*M2[5]
    C[138] = -12*M3[5]+12*M2[5]
    C[[111,285]] .= -4*M3[5]+4*M2[5]
    C[[37,42,59,253,262,275]] .= 16*M3[5]-16*M2[5]
    C[[125,134,155,197,206,227]] .= -16*M1[2]-16*M2[2]+32*M3[2]
    C[[131,222]] .= -8*M1[2]-8*M2[2]+16*M3[2]
    C[[49,54,67,141,146,167]] .= 16*M1[2]+16*M2[2]-32*M3[2]
    C[[129,215]] .= 16*M1[5]-8*M2[5]-8*M3[5]
    C[[161,166,179,217,226,239]] .= 32*M2[3]-16*M3[3]-16*M1[3]
    C[[85,110,171]] .= 4*M2[4]+4*M3[6]+4*M1[1]
    C[[95,122,233]] .= -4*M2[5]-4*M3[5]+8*M1[5]
    C[[201,259,270]] .= 4*M2[5]+4*M3[5]-8*M1[5]
    C[213] = -16*M3[2]+8*M2[2]+8*M1[2]
    C[[187,250,257]] .= -8*M3[2]+4*M2[2]+4*M1[2]
    C[[150,157,203]] .= 8*M3[2]-4*M2[2]-4*M1[2]
    C[[130,193]] .= -8*M3[3]+16*M2[3]-8*M1[3]
    C[[103,137,186]] .= -4*M3[3]+8*M2[3]-4*M1[3]
    C[[234,251,269]] .= 4*M3[3]-8*M2[3]+4*M1[3]
    C[223] = 8*M3[3]+8*M1[3]-16*M2[3]
    C[[33,38,55,97,106,135]] .= 16*M3[3]+16*M1[3]-32*M2[3]
    C[[105,114,143,225,230,243]] .= -16*M3[5]+32*M1[5]-16*M2[5]
    C[194] = 8*M3[5]+8*M2[5]-16*M1[5]
    C[[29,34,51,153,162,175]] .= 16*M3[5]-32*M1[5]+16*M2[5]
    C[[1,6,17,22,27,43,73,78,83,289,294,299]] .= -4*M3[6]-4*M2[4]-4*M1[1]
    C[[139,158,249]] .= 8*M2[6]+8*M3[4]-4*M3[6]-4*M2[4]+4*M1[1]
    C[[53,58,71,189,198,219]] .= -16*M3[4]+8*M3[6]-8*M1[1]+8*M2[4]-16*M2[6]
    C[[9,14,35,237,242,247]] .= -8*M3[6]-16*M1[4]-16*M2[1]+8*M2[4]+8*M1[1]
    C[[123,149,258]] .= -4*M3[6]+4*M2[4]+8*M3[1]+8*M1[6]-4*M1[1]
    C[[94,101,271]] .= 4*M3[6]+8*M2[1]-4*M2[4]+8*M1[4]-4*M1[1]
    C[[45,50,63,205,210,231]] .= 8*M3[6]-16*M1[6]-8*M2[4]-16*M3[1]+8*M1[1]
    C[[133,142,163]] .= -32*M1[4]+32*M1[6]+32*M2[1]-32*M2[6]-32*M3[1]+32*M3[4]
    C[[195,214,221]] .= -8*M3[4]-8*M2[1]+8*M2[6]+8*M3[1]+8*M1[4]-8*M1[6]

    C = C./repeat(sqrt.(sum(C.*conj(C),dims=2)),1,size(C,2))

    U(w,x,y,z) = [x^5,x^4*y,x^3*y^2,x^2*y^3,x*y^4,y^5,x^4*z,x^3*z*y,x^2*z*y^2,x*y^3*z,y^4*z,x^3*z^2,x^2*y*z^2,x*y^2*z^2,y^3*z^2,x^2*z^3,x*y*z^3,y^2*z^3,x*z^4,y*z^4,z^5,w*x^3,x^4,w*x^2*y,x^3*y,w*x*y^2,x^2*y^2,w*y^3,x*y^3,y^4,w*x^2*z,x^3*z,w*x*y*z,x^2*z*y,w*y^2*z,x*z*y^2,y^3*z,w*x*z^2,x^2*z^2,w*y*z^2,x*y*z^2,y^2*z^2,w*z^3,x*z^3,y*z^3,z^4,w*x^2,x^3,w*x*y,x^2*y,w*y^2,x*y^2,y^3,w*x*z,x^2*z,w*y*z,x*y*z,y^2*z,w*z^2,x*z^2,y*z^2,z^3,w*x,x^2,w*y,x*y,y^2,w*z,x*z,y*z,z^2,w,x,y,z,1]

    return C,U

end