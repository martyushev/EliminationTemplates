import numpy as np

def coefs_r6p(data):
    q = data[0].T.flat
    X = data[1].T.flat
    A = data[2].T.flat

    C = np.zeros((6,16))
    C.flat[17] = q[0]*A[9]-q[0]**2*A[11]-q[0]*A[8]+A[6]
    C.flat[3] = -q[0]*A[22]+q[1]*A[20]+q[1]*q[0]*A[23]-A[19]
    C.flat[6] = -q[0]*A[40]+q[1]*A[38]+q[1]*q[0]*A[41]-A[37]
    C.flat[23] = q[0]*A[45]-q[0]**2*A[47]-q[0]*A[44]+A[42]
    C.flat[49] = q[2]*A[9]-q[2]**2*A[11]-q[2]*A[8]+A[6]
    C.flat[35] = -q[2]*A[22]+q[3]*A[20]+q[3]*q[2]*A[23]-A[19]
    C.flat[38] = -q[2]*A[40]+q[3]*A[38]+q[3]*q[2]*A[41]-A[37]
    C.flat[55] = q[2]*A[45]-q[2]**2*A[47]-q[2]*A[44]+A[42]
    C.flat[81] = q[4]*A[9]-q[4]**2*A[11]-q[4]*A[8]+A[6]
    C.flat[67] = -q[4]*A[22]+q[5]*A[20]+q[5]*q[4]*A[23]-A[19]
    C.flat[70] = -q[4]*A[40]+q[5]*A[38]+q[5]*q[4]*A[41]-A[37]
    C.flat[87] = q[4]*A[45]-q[4]**2*A[47]-q[4]*A[44]+A[42]
    C.flat[1] = -X[0]*q[0]-q[0]*A[10]+q[1]*A[8]+q[1]*q[0]*A[11]-A[7]
    C.flat[24] = -X[0]*q[0]+q[0]*A[51]-q[0]**2*A[53]-q[0]*A[50]+A[48]
    C.flat[19] = X[1]*q[0]+q[0]*A[21]-q[0]**2*A[23]-q[0]*A[20]+A[18]
    C.flat[8] = X[1]*q[0]-q[0]*A[52]+q[1]*A[50]+q[1]*q[0]*A[53]-A[49]
    C.flat[7] = -X[2]*q[0]-q[0]*A[46]+q[1]*A[44]+q[1]*q[0]*A[47]-A[43]
    C.flat[22] = X[2]*q[0]+q[0]*A[39]-q[0]**2*A[41]-q[0]*A[38]+A[36]
    C.flat[51] = X[4]*q[2]+q[2]*A[21]-q[2]**2*A[23]-q[2]*A[20]+A[18]
    C.flat[40] = X[4]*q[2]-q[2]*A[52]+q[3]*A[50]+q[3]*q[2]*A[53]-A[49]
    C.flat[39] = -X[5]*q[2]-q[2]*A[46]+q[3]*A[44]+q[3]*q[2]*A[47]-A[43]
    C.flat[54] = X[5]*q[2]+q[2]*A[39]-q[2]**2*A[41]-q[2]*A[38]+A[36]
    C.flat[83] = X[7]*q[4]+q[4]*A[21]-q[4]**2*A[23]-q[4]*A[20]+A[18]
    C.flat[72] = X[7]*q[4]-q[4]*A[52]+q[5]*A[50]+q[5]*q[4]*A[53]-A[49]
    C.flat[71] = -X[8]*q[4]-q[4]*A[46]+q[5]*A[44]+q[5]*q[4]*A[47]-A[43]
    C.flat[86] = X[8]*q[4]+q[4]*A[39]-q[4]**2*A[41]-q[4]*A[38]+A[36]
    C.flat[16] = q[0]*A[3]+X[2]*q[0]**2-q[0]**2*A[5]-q[0]*A[2]+A[0]
    C.flat[18] = q[0]*A[15]-X[0]*q[0]**2-q[0]**2*A[17]-q[0]*A[14]+A[12]
    C.flat[2] = -q[0]*A[16]+q[1]*A[14]+q[1]*X[0]*q[0]+q[1]*q[0]*A[17]-A[13]
    C.flat[4] = -q[0]*A[28]+q[1]*A[26]-q[1]*X[2]*q[0]+q[1]*q[0]*A[29]-A[25]
    C.flat[21] = q[0]*A[33]-X[1]*q[0]**2-q[0]**2*A[35]-q[0]*A[32]+A[30]
    C.flat[5] = -q[0]*A[34]+q[1]*A[32]+q[1]*X[1]*q[0]+q[1]*q[0]*A[35]-A[31]
    C.flat[48] = q[2]*A[3]+X[5]*q[2]**2-q[2]**2*A[5]-q[2]*A[2]+A[0]
    C.flat[50] = q[2]*A[15]-X[3]*q[2]**2-q[2]**2*A[17]-q[2]*A[14]+A[12]
    C.flat[34] = -q[2]*A[16]+q[3]*A[14]+q[3]*X[3]*q[2]+q[3]*q[2]*A[17]-A[13]
    C.flat[36] = -q[2]*A[28]+q[3]*A[26]-q[3]*X[5]*q[2]+q[3]*q[2]*A[29]-A[25]
    C.flat[53] = q[2]*A[33]-X[4]*q[2]**2-q[2]**2*A[35]-q[2]*A[32]+A[30]
    C.flat[37] = -q[2]*A[34]+q[3]*A[32]+q[3]*X[4]*q[2]+q[3]*q[2]*A[35]-A[31]
    C.flat[33] = -q[2]*X[3]-q[2]*A[10]+q[3]*A[8]+q[3]*q[2]*A[11]-A[7]
    C.flat[56] = -q[2]*X[3]+q[2]*A[51]-q[2]**2*A[53]-q[2]*A[50]+A[48]
    C.flat[80] = q[4]*A[3]+X[8]*q[4]**2-q[4]**2*A[5]-q[4]*A[2]+A[0]
    C.flat[82] = q[4]*A[15]-X[6]*q[4]**2-q[4]**2*A[17]-q[4]*A[14]+A[12]
    C.flat[66] = -q[4]*A[16]+q[5]*A[14]+q[5]*X[6]*q[4]+q[5]*q[4]*A[17]-A[13]
    C.flat[68] = -q[4]*A[28]+q[5]*A[26]-q[5]*X[8]*q[4]+q[5]*q[4]*A[29]-A[25]
    C.flat[85] = q[4]*A[33]-X[7]*q[4]**2-q[4]**2*A[35]-q[4]*A[32]+A[30]
    C.flat[69] = -q[4]*A[34]+q[5]*A[32]+q[5]*X[7]*q[4]+q[5]*q[4]*A[35]-A[31]
    C.flat[65] = -q[4]*X[6]-q[4]*A[10]+q[5]*A[8]+q[5]*q[4]*A[11]-A[7]
    C.flat[88] = -q[4]*X[6]+q[4]*A[51]-q[4]**2*A[53]-q[4]*A[50]+A[48]
    C.flat[13] = -q[1]*X[0]*q[0]+q[1]*q[0]*A[83]-A[79]-q[0]*A[82]+q[1]*A[80]
    C.flat[10] = q[1]*q[0]*A[65]-A[61]-q[0]*A[64]+q[1]*A[62]-X[0]*q[1]
    C.flat[11] = q[1]*q[0]*A[71]-A[67]-q[0]*A[70]+q[1]*A[68]-X[0]
    C.flat[14] = q[1]*q[0]*A[89]-A[85]-X[0]*q[0]-q[0]*A[88]+q[1]*A[86]
    C.flat[45] = -q[3]*X[3]*q[2]+q[3]*q[2]*A[83]-A[79]-q[2]*A[82]+q[3]*A[80]
    C.flat[42] = q[3]*q[2]*A[65]-A[61]-q[2]*A[64]+q[3]*A[62]-X[3]*q[3]
    C.flat[43] = q[3]*q[2]*A[71]-A[67]-q[2]*A[70]+q[3]*A[68]-X[3]
    C.flat[46] = q[3]*q[2]*A[89]-A[85]-q[2]*X[3]-q[2]*A[88]+q[3]*A[86]
    C.flat[77] = -q[5]*X[6]*q[4]+q[5]*q[4]*A[83]-A[79]-q[4]*A[82]+q[5]*A[80]
    C.flat[74] = q[5]*q[4]*A[65]-A[61]-q[4]*A[64]+q[5]*A[62]-X[6]*q[5]
    C.flat[75] = q[5]*q[4]*A[71]-A[67]-q[4]*A[70]+q[5]*A[68]-X[6]
    C.flat[78] = q[5]*q[4]*A[89]-A[85]-q[4]*X[6]-q[4]*A[88]+q[5]*A[86]
    C.flat[25] = A[54]+q[0]*A[57]-q[0]*A[56]-q[0]**2*A[59]-X[1]*q[0]
    C.flat[57] = A[54]+q[2]*A[57]-q[2]*A[56]-q[2]**2*A[59]-X[4]*q[2]
    C.flat[89] = A[54]+q[4]*A[57]-q[4]*A[56]-q[4]**2*A[59]-X[7]*q[4]
    C.flat[27] = A[66]+q[0]*A[69]-q[0]*A[68]-q[0]**2*A[71]-X[1]
    C.flat[59] = A[66]+q[2]*A[69]-q[2]*A[68]-q[2]**2*A[71]-X[4]
    C.flat[91] = A[66]+q[4]*A[69]-q[4]*A[68]-q[4]**2*A[71]-X[7]
    C.flat[28] = A[72]+q[0]*A[75]-q[0]*A[74]-X[1]*q[0]**2-q[0]**2*A[77]
    C.flat[60] = A[72]+q[2]*A[75]-q[2]*A[74]-X[4]*q[2]**2-q[2]**2*A[77]
    C.flat[92] = A[72]+q[4]*A[75]-q[4]*A[74]-X[7]*q[4]**2-q[4]**2*A[77]
    C.flat[30] = A[84]-X[1]*q[0]+q[0]*A[87]-q[0]*A[86]-q[0]**2*A[89]
    C.flat[62] = A[84]-X[4]*q[2]+q[2]*A[87]-q[2]*A[86]-q[2]**2*A[89]
    C.flat[94] = A[84]-X[7]*q[4]+q[4]*A[87]-q[4]*A[86]-q[4]**2*A[89]
    C.flat[20] = -X[0]*q[0]+q[0]*A[27]+X[2]*q[0]**2-q[0]**2*A[29]-q[0]*A[26]+A[24]
    C.flat[0] = X[1]*q[0]-q[0]*A[4]+q[1]*A[2]-q[1]*X[2]*q[0]+q[1]*q[0]*A[5]-A[1]
    C.flat[32] = X[4]*q[2]-q[2]*A[4]+q[3]*A[2]-q[3]*X[5]*q[2]+q[3]*q[2]*A[5]-A[1]
    C.flat[64] = X[7]*q[4]-q[4]*A[4]+q[5]*A[2]-q[5]*X[8]*q[4]+q[5]*q[4]*A[5]-A[1]
    C.flat[31] = q[0]*A[93]-q[0]**2*A[95]-q[0]*A[92]-X[2]*q[0]+A[90]+X[0]
    C.flat[52] = -q[2]*X[3]+q[2]*A[27]+X[5]*q[2]**2-q[2]**2*A[29]-q[2]*A[26]+A[24]
    C.flat[63] = -q[2]**2*A[95]-q[2]*A[92]-X[5]*q[2]+q[2]*A[93]+A[90]+X[3]
    C.flat[95] = q[4]*A[93]-q[4]**2*A[95]-q[4]*A[92]-X[8]*q[4]+A[90]+X[6]
    C.flat[84] = -q[4]*X[6]+q[4]*A[27]+X[8]*q[4]**2-q[4]**2*A[29]-q[4]*A[26]+A[24]
    C.flat[12] = q[1]*X[1]*q[0]+q[1]*q[0]*A[77]-A[73]+X[2]*q[0]-q[0]*A[76]+q[1]*A[74]
    C.flat[9] = q[1]*q[0]*A[59]-A[55]-q[0]*A[58]+q[1]*A[56]+X[1]*q[1]+X[2]
    C.flat[15] = q[1]*q[0]*A[95]+q[1]*A[92]+X[2]*q[1]-q[0]*A[94]-A[91]-X[1]
    C.flat[44] = q[3]*X[4]*q[2]+q[3]*q[2]*A[77]-A[73]+X[5]*q[2]-q[2]*A[76]+q[3]*A[74]
    C.flat[41] = q[3]*q[2]*A[59]-A[55]-q[2]*A[58]+q[3]*A[56]+X[4]*q[3]+X[5]
    C.flat[47] = q[3]*q[2]*A[95]+q[3]*A[92]+X[5]*q[3]-q[2]*A[94]-A[91]-X[4]
    C.flat[76] = q[5]*X[7]*q[4]+q[5]*q[4]*A[77]-A[73]+X[8]*q[4]-q[4]*A[76]+q[5]*A[74]
    C.flat[73] = q[5]*q[4]*A[59]-A[55]-q[4]*A[58]+q[5]*A[56]+X[7]*q[5]+X[8]
    C.flat[79] = q[5]*q[4]*A[95]+q[5]*A[92]+X[8]*q[5]-q[4]*A[94]-A[91]-X[7]
    C.flat[26] = A[60]+q[0]*A[63]-q[0]*A[62]-q[0]**2*A[65]+X[0]*q[0]+X[2]
    C.flat[58] = A[60]+q[2]*A[63]-q[2]*A[62]-q[2]**2*A[65]+q[2]*X[3]+X[5]
    C.flat[90] = A[60]+q[4]*A[63]-q[4]*A[62]-q[4]**2*A[65]+q[4]*X[6]+X[8]
    C.flat[29] = A[78]+X[2]*q[0]+q[0]*A[81]-q[0]*A[80]+X[0]*q[0]**2-q[0]**2*A[83]
    C.flat[61] = A[78]+X[5]*q[2]+q[2]*A[81]-q[2]*A[80]+X[3]*q[2]**2-q[2]**2*A[83]
    C.flat[93] = A[78]+X[8]*q[4]+q[4]*A[81]-q[4]*A[80]+X[6]*q[4]**2-q[4]**2*A[83]

    C = C/np.sqrt(np.sum(C*np.conj(C),axis=1,keepdims=True))

    def U(u,v,w,x,y,z):
        return np.array([x*u,x*v,x*w,y*u,y*v,y*w,u*z,z*v,z*w,u,v,w,x,y,z,1])

    return C,U