import numpy as np

def coefs_optpose4pt_v2(data):
    U = data[0].T.flat
    u = data[1].T.flat

    C = np.zeros((5,19))
    C.flat[94] = -1
    C.flat[[84,89]] = 1
    C.flat[18] = u[0]*U[0]**2
    C.flat[37] = u[4]*U[3]**2
    C.flat[56] = u[8]*U[6]**2
    C.flat[75] = u[12]*U[9]**2
    C.flat[14] = 2*u[0]*U[0]
    C.flat[15] = 2*u[1]*U[0]
    C.flat[9] = 2*u[1]*U[1]
    C.flat[5] = 2*u[1]*U[2]
    C.flat[33] = 2*u[4]*U[3]
    C.flat[34] = 2*u[5]*U[3]
    C.flat[28] = 2*u[5]*U[4]
    C.flat[24] = 2*u[5]*U[5]
    C.flat[52] = 2*u[8]*U[6]
    C.flat[53] = 2*u[9]*U[6]
    C.flat[47] = 2*u[9]*U[7]
    C.flat[43] = 2*u[9]*U[8]
    C.flat[71] = 2*u[12]*U[9]
    C.flat[72] = 2*u[13]*U[9]
    C.flat[66] = 2*u[13]*U[10]
    C.flat[62] = 2*u[13]*U[11]
    C.flat[17] = 2*u[1]*U[1]*U[0]
    C.flat[16] = 2*u[1]*U[2]*U[0]
    C.flat[36] = 2*u[5]*U[4]*U[3]
    C.flat[35] = 2*u[5]*U[5]*U[3]
    C.flat[55] = 2*u[9]*U[7]*U[6]
    C.flat[54] = 2*u[9]*U[8]*U[6]
    C.flat[74] = 2*u[13]*U[10]*U[9]
    C.flat[73] = 2*u[13]*U[11]*U[9]
    C.flat[2] = 2*u[1]
    C.flat[3] = 2*u[2]
    C.flat[21] = 2*u[5]
    C.flat[22] = 2*u[6]
    C.flat[40] = 2*u[9]
    C.flat[41] = 2*u[10]
    C.flat[59] = 2*u[13]
    C.flat[60] = 2*u[14]
    C.flat[6] = 2*u[0]*U[1]+2*u[2]*U[2]
    C.flat[10] = -2*u[0]*U[2]+2*u[2]*U[1]
    C.flat[7] = 2*u[2]*U[1]+2*u[3]*U[2]
    C.flat[11] = -2*u[2]*U[2]+2*u[3]*U[1]
    C.flat[25] = 2*u[4]*U[4]+2*u[6]*U[5]
    C.flat[29] = -2*u[4]*U[5]+2*u[6]*U[4]
    C.flat[26] = 2*u[6]*U[4]+2*u[7]*U[5]
    C.flat[30] = -2*u[6]*U[5]+2*u[7]*U[4]
    C.flat[44] = 2*u[8]*U[7]+2*u[10]*U[8]
    C.flat[48] = -2*u[8]*U[8]+2*u[10]*U[7]
    C.flat[45] = 2*u[10]*U[7]+2*u[11]*U[8]
    C.flat[49] = -2*u[10]*U[8]+2*u[11]*U[7]
    C.flat[63] = 2*u[12]*U[10]+2*u[14]*U[11]
    C.flat[67] = -2*u[12]*U[11]+2*u[14]*U[10]
    C.flat[64] = 2*u[14]*U[10]+2*u[15]*U[11]
    C.flat[68] = -2*u[14]*U[11]+2*u[15]*U[10]
    C.flat[13] = -2*u[2]*U[2]*U[1]+u[0]*U[2]**2+u[3]*U[1]**2
    C.flat[8] = 2*u[2]*U[2]*U[1]+u[0]*U[1]**2+u[3]*U[2]**2
    C.flat[32] = -2*u[6]*U[5]*U[4]+u[4]*U[5]**2+u[7]*U[4]**2
    C.flat[27] = 2*u[6]*U[5]*U[4]+u[4]*U[4]**2+u[7]*U[5]**2
    C.flat[51] = -2*u[10]*U[8]*U[7]+u[11]*U[7]**2+u[8]*U[8]**2
    C.flat[46] = 2*u[10]*U[8]*U[7]+u[11]*U[8]**2+u[8]*U[7]**2
    C.flat[70] = -2*u[14]*U[11]*U[10]+u[12]*U[11]**2+u[15]*U[10]**2
    C.flat[65] = 2*u[14]*U[11]*U[10]+u[12]*U[10]**2+u[15]*U[11]**2
    C.flat[12] = 2*u[2]*U[1]**2-2*u[2]*U[2]**2-2*u[0]*U[1]*U[2]+2*u[3]*U[1]*U[2]
    C.flat[31] = 2*u[6]*U[4]**2-2*u[6]*U[5]**2-2*u[4]*U[4]*U[5]+2*u[7]*U[4]*U[5]
    C.flat[50] = 2*u[10]*U[7]**2-2*u[10]*U[8]**2-2*u[8]*U[7]*U[8]+2*u[11]*U[7]*U[8]
    C.flat[69] = 2*u[14]*U[10]**2-2*u[14]*U[11]**2-2*u[12]*U[10]*U[11]+2*u[15]*U[10]*U[11]
    C.flat[[0,1]] = u[0]
    C.flat[4] = u[3]
    C.flat[[19,20]] = u[4]
    C.flat[23] = u[7]
    C.flat[[38,39]] = u[8]
    C.flat[42] = u[11]
    C.flat[[57,58]] = u[12]
    C.flat[61] = u[15]

    C = C/np.sqrt(np.sum(C*np.conj(C),axis=1,keepdims=True))

    def U(v,w,x,y,z):
        return np.array([v**2,w**2,x*v,x*w,x**2,y*v,y*w,x*y,y**2,z*v,z*w,x*z,y*z,z**2,v,x,y,z,1])

    return C,U