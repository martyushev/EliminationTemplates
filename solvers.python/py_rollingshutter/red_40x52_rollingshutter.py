import numpy as np
from scipy.sparse import csr_matrix
from scipy.linalg import lu, solve, eig

# Input: coefficient matrix C of size 10x21
# Output: solution matrix S of size 5x12

def red_40x52_rollingshutter(C):
    M = csr_matrix((C.flat[[0,1,2,3,4,5,14,10,11,12,15,16,17,19,20,6,7,8,9,13,18,0,1,2,3,4,5,6,7,8,10,11,12,14,15,16,17,19,20,9,13,18,0,1,2,3,4,5,6,7,8,10,11,12,14,15,16,17,19,20,9,13,18,0,1,2,3,4,5,6,7,8,10,11,12,14,15,16,17,19,20,9,13,18,21,22,23,24,25,26,35,31,32,33,36,37,38,40,41,27,28,29,30,34,39,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,40,41,30,34,39,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,40,41,30,34,39,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,40,41,30,34,39,42,43,44,45,46,47,56,52,53,54,57,58,59,61,62,48,49,50,51,55,60,42,43,44,45,46,47,48,49,50,52,53,54,56,57,58,59,61,62,51,55,60,42,43,44,45,46,47,48,49,50,52,53,54,56,57,58,59,61,62,51,55,60,42,43,44,45,46,47,48,49,50,52,53,54,56,57,58,59,61,62,51,55,60,63,64,65,66,67,68,77,73,74,75,78,79,80,82,83,69,70,71,72,76,81,63,64,65,66,67,68,69,70,71,73,74,75,77,78,79,80,82,83,72,76,81,63,64,65,66,67,68,69,70,71,73,74,75,77,78,79,80,82,83,72,76,81,63,64,65,66,67,68,69,70,71,73,74,75,77,78,79,80,82,83,72,76,81,84,85,86,87,88,89,98,94,95,96,99,100,101,103,104,90,91,92,93,97,102,84,85,86,87,88,89,90,91,92,94,95,96,98,99,100,101,103,104,93,97,102,84,85,86,87,88,89,90,91,92,94,95,96,98,99,100,101,103,104,93,97,102,84,85,86,87,88,89,90,91,92,94,95,96,98,99,100,101,103,104,93,97,102,105,106,107,108,109,110,119,115,116,117,120,121,122,124,125,111,112,113,114,118,123,105,106,107,108,109,110,111,112,113,115,116,117,119,120,121,122,124,125,114,118,123,105,106,107,108,109,110,111,112,113,115,116,117,119,120,121,122,124,125,114,118,123,105,106,107,108,109,110,111,112,113,115,116,117,119,120,121,122,124,125,114,118,123,126,127,128,129,130,131,140,136,137,138,141,142,143,145,146,132,133,134,135,139,144,126,127,128,129,130,131,132,133,134,136,137,138,140,141,142,143,145,146,135,139,144,126,127,128,129,130,131,132,133,134,136,137,138,140,141,142,143,145,146,135,139,144,126,127,128,129,130,131,132,133,134,136,137,138,140,141,142,143,145,146,135,139,144,147,148,149,150,151,152,161,157,158,159,162,163,164,166,167,153,154,155,156,160,165,147,148,149,150,151,152,153,154,155,157,158,159,161,162,163,164,166,167,156,160,165,147,148,149,150,151,152,153,154,155,157,158,159,161,162,163,164,166,167,156,160,165,147,148,149,150,151,152,153,154,155,157,158,159,161,162,163,164,166,167,156,160,165,168,169,170,171,172,173,182,178,179,180,183,184,185,187,188,174,175,176,177,181,186,168,169,170,171,172,173,174,175,176,178,179,180,182,183,184,185,187,188,177,181,186,168,169,170,171,172,173,174,175,176,178,179,180,182,183,184,185,187,188,177,181,186,168,169,170,171,172,173,174,175,176,178,179,180,182,183,184,185,187,188,177,181,186,189,190,191,192,193,194,203,199,200,201,204,205,206,208,209,195,196,197,198,202,207,189,190,191,192,193,194,195,196,197,199,200,201,203,204,205,206,208,209,198,202,207,189,190,191,192,193,194,195,196,197,199,200,201,203,204,205,206,208,209,198,202,207,189,190,191,192,193,194,195,196,197,199,200,201,203,204,205,206,208,209,198,202,207]],([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39],[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,0,1,2,4,5,7,10,11,13,16,17,19,22,25,26,28,32,35,40,43,46,1,2,3,5,6,8,11,12,14,17,18,20,23,26,27,29,33,36,41,44,47,4,5,6,7,8,9,13,14,15,19,20,21,24,28,29,30,34,37,42,45,48,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,0,1,2,4,5,7,10,11,13,16,17,19,22,25,26,28,32,35,40,43,46,1,2,3,5,6,8,11,12,14,17,18,20,23,26,27,29,33,36,41,44,47,4,5,6,7,8,9,13,14,15,19,20,21,24,28,29,30,34,37,42,45,48,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,0,1,2,4,5,7,10,11,13,16,17,19,22,25,26,28,32,35,40,43,46,1,2,3,5,6,8,11,12,14,17,18,20,23,26,27,29,33,36,41,44,47,4,5,6,7,8,9,13,14,15,19,20,21,24,28,29,30,34,37,42,45,48,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,0,1,2,4,5,7,10,11,13,16,17,19,22,25,26,28,32,35,40,43,46,1,2,3,5,6,8,11,12,14,17,18,20,23,26,27,29,33,36,41,44,47,4,5,6,7,8,9,13,14,15,19,20,21,24,28,29,30,34,37,42,45,48,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,0,1,2,4,5,7,10,11,13,16,17,19,22,25,26,28,32,35,40,43,46,1,2,3,5,6,8,11,12,14,17,18,20,23,26,27,29,33,36,41,44,47,4,5,6,7,8,9,13,14,15,19,20,21,24,28,29,30,34,37,42,45,48,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,0,1,2,4,5,7,10,11,13,16,17,19,22,25,26,28,32,35,40,43,46,1,2,3,5,6,8,11,12,14,17,18,20,23,26,27,29,33,36,41,44,47,4,5,6,7,8,9,13,14,15,19,20,21,24,28,29,30,34,37,42,45,48,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,0,1,2,4,5,7,10,11,13,16,17,19,22,25,26,28,32,35,40,43,46,1,2,3,5,6,8,11,12,14,17,18,20,23,26,27,29,33,36,41,44,47,4,5,6,7,8,9,13,14,15,19,20,21,24,28,29,30,34,37,42,45,48,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,0,1,2,4,5,7,10,11,13,16,17,19,22,25,26,28,32,35,40,43,46,1,2,3,5,6,8,11,12,14,17,18,20,23,26,27,29,33,36,41,44,47,4,5,6,7,8,9,13,14,15,19,20,21,24,28,29,30,34,37,42,45,48,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,0,1,2,4,5,7,10,11,13,16,17,19,22,25,26,28,32,35,40,43,46,1,2,3,5,6,8,11,12,14,17,18,20,23,26,27,29,33,36,41,44,47,4,5,6,7,8,9,13,14,15,19,20,21,24,28,29,30,34,37,42,45,48,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,0,1,2,4,5,7,10,11,13,16,17,19,22,25,26,28,32,35,40,43,46,1,2,3,5,6,8,11,12,14,17,18,20,23,26,27,29,33,36,41,44,47,4,5,6,7,8,9,13,14,15,19,20,21,24,28,29,30,34,37,42,45,48])),shape=(40,52))
    M = M.toarray()

    P,L,_ = lu(M[:,:32])
    M = solve(np.concatenate((P@L,P[:,32:]),axis=1),M[:,32:])
    M = M[-8:,:]

    T0 = np.zeros((12,12))
    T0[[3,4,5,6,7,8,10,11],:] = -M[:,8:]
    T0.flat[[6,19,32,119]] = 1
    T1 = np.zeros((12,12))
    T1[np.ix_([3,4,5,6,7,8,10,11],[3,4,5,6,7,8,10,11])] = M[:,:8]
    T1.flat[[0,13,26,117]] = 1

    _,V = eig(T0,T1)
    S = V[6:11,:]/np.tile(V[11,:],(5,1))
    S = S[:,np.all(np.isfinite(S),axis=0)]

    return S