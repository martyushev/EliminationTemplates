import numpy as np
from scipy.sparse import csr_matrix
from scipy.linalg import lu, solve, eig

# Input: coefficient matrix C of size 3x39
# Output: solution matrix S of size 3x20

def red_19x39_8ptF_radial(C):
    M = csr_matrix((C.flat[[35,36,38,26,27,28,32,33,34,37,26,28,35,36,38,27,32,33,34,37,28,35,36,38,26,27,32,33,34,37,26,27,28,32,33,34,35,36,37,38,26,27,28,34,35,36,38,32,33,37,28,35,36,38,26,27,32,33,34,37,26,27,28,32,34,33,35,36,37,38,26,28,35,36,38,27,32,33,34,37,26,27,34,28,32,33,35,36,37,38,74,75,77,65,66,67,71,72,73,76,65,67,74,75,77,66,71,72,73,76,67,74,75,77,65,66,71,72,73,76,65,66,67,71,72,73,74,75,76,77,65,66,67,73,74,75,77,71,72,76,67,74,75,77,65,66,71,72,73,76,65,66,67,71,73,72,74,75,76,77,65,67,74,75,77,66,71,72,73,76,65,66,73,67,71,72,74,75,76,77,78,79,82,83,84,85,91,94,95,97,98,99,100,107,108,109,113,114,116,80,81,86,87,88,89,90,92,93,96,101,102,103,104,105,106,110,111,112,115]],([0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18],[16,17,18,32,33,34,35,36,37,38,6,7,13,14,16,26,29,30,32,35,8,14,15,17,26,27,30,31,33,36,7,8,28,32,33,34,35,36,37,38,0,1,2,6,9,10,13,22,23,29,4,11,12,15,19,20,24,25,27,31,2,3,5,6,7,26,29,30,32,35,1,3,10,11,14,19,23,24,26,30,3,4,8,21,26,27,30,31,33,36,16,17,18,32,33,34,35,36,37,38,6,7,13,14,16,26,29,30,32,35,8,14,15,17,26,27,30,31,33,36,7,8,28,32,33,34,35,36,37,38,0,1,2,6,9,10,13,22,23,29,4,11,12,15,19,20,24,25,27,31,2,3,5,6,7,26,29,30,32,35,1,3,10,11,14,19,23,24,26,30,3,4,8,21,26,27,30,31,33,36,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38])),shape=(19,39))
    M = M.toarray()

    P,L,_ = lu(M[:,:8])
    M = solve(np.concatenate((P@L,P[:,8:]),axis=1),M[:,8:])
    M = M[-11:,:]

    T0 = np.zeros((20,20))
    T0[[2,3,4,5,6,10,11,12,16,17,19],:] = -M[:,11:]
    T0.flat[[5,26,151,172,195,276,297,318,379]] = 1
    T1 = np.zeros((20,20))
    T1[np.ix_([2,3,4,5,6,10,11,12,16,17,19],[2,3,4,5,6,10,11,12,16,17,19])] = M[:,:11]
    T1.flat[[0,21,147,168,189,273,294,315,378]] = 1

    _,V = eig(T0,T1)
    S = V[16:19,:]/np.tile(V[19,:],(3,1))
    S = S[:,np.all(np.isfinite(S),axis=0)]

    return S