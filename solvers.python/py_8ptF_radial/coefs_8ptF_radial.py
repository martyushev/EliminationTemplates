import numpy as np

def coefs_8ptF_radial(data):
    d = data[0].T.flat
    x1 = data[1].T.flat
    x2 = data[2].T.flat

    C = np.zeros((3,39))
    C.flat[78] = d[1]*d[5]-d[2]*d[4]
    C.flat[81] = -d[6]*d[11]+d[8]*d[9]
    C.flat[96] = d[12]*d[16]-d[13]*d[15]
    C.flat[86] = -d[12]*d[17]+d[14]*d[15]
    C.flat[85] = d[13]*d[17]-d[14]*d[16]
    C.flat[97] = d[19]*d[23]-d[20]*d[22]
    C.flat[100] = -d[24]*d[29]+d[26]*d[27]
    C.flat[116] = d[36]*d[40]-d[37]*d[39]
    C.flat[84] = -d[6]*d[17]-d[12]*d[11]+d[14]*d[9]+d[8]*d[15]
    C.flat[90] = -d[6]*d[29]-d[24]*d[11]+d[26]*d[9]+d[8]*d[27]
    C.flat[106] = d[12]*d[34]+d[30]*d[16]-d[13]*d[33]-d[31]*d[15]
    C.flat[82] = d[13]*d[5]+d[1]*d[17]-d[14]*d[4]-d[2]*d[16]
    C.flat[87] = d[19]*d[5]+d[1]*d[23]-d[20]*d[4]-d[2]*d[22]
    C.flat[115] = d[30]*d[40]+d[36]*d[34]-d[31]*d[39]-d[37]*d[33]
    C.flat[26] = x1[0]*x2[0]**2*d[2]+x1[0]*x2[1]**2*d[2]+x1[1]*x2[0]**2*d[5]+x1[1]*x2[1]**2*d[5]
    C.flat[27] = x1[0]*x2[0]**2*d[8]+x1[0]*x2[1]**2*d[8]+x1[1]*x2[0]**2*d[11]+x1[1]*x2[1]**2*d[11]
    C.flat[28] = x1[1]*x2[0]**2*d[17]+x1[1]*x2[1]**2*d[17]+x1[0]*x2[0]**2*d[14]+x1[0]*x2[1]**2*d[14]
    C.flat[65] = x1[2]*x2[2]**2*d[2]+x1[2]*x2[3]**2*d[2]+x1[3]*x2[2]**2*d[5]+x1[3]*x2[3]**2*d[5]
    C.flat[66] = x1[2]*x2[2]**2*d[8]+x1[2]*x2[3]**2*d[8]+x1[3]*x2[2]**2*d[11]+x1[3]*x2[3]**2*d[11]
    C.flat[67] = x1[2]*x2[3]**2*d[14]+x1[3]*x2[2]**2*d[17]+x1[3]*x2[3]**2*d[17]+x1[2]*x2[2]**2*d[14]
    C.flat[79] = -d[0]*d[5]+d[7]*d[5]+d[1]*d[11]-d[8]*d[4]-d[2]*d[10]+d[2]*d[3]
    C.flat[80] = -d[0]*d[11]-d[6]*d[5]+d[7]*d[11]-d[8]*d[10]+d[8]*d[3]+d[2]*d[9]
    C.flat[112] = d[12]*d[40]+d[30]*d[34]+d[36]*d[16]-d[13]*d[39]-d[31]*d[33]-d[37]*d[15]
    C.flat[107] = d[18]*d[22]+d[37]*d[23]+d[19]*d[41]-d[19]*d[21]-d[38]*d[22]-d[20]*d[40]
    C.flat[98] = -d[18]*d[23]+d[25]*d[23]+d[19]*d[29]-d[26]*d[22]-d[20]*d[28]+d[20]*d[21]
    C.flat[99] = -d[18]*d[29]-d[24]*d[23]+d[25]*d[29]-d[26]*d[28]+d[26]*d[21]+d[20]*d[27]
    C.flat[113] = d[18]*d[40]+d[36]*d[22]+d[37]*d[41]-d[19]*d[39]-d[37]*d[21]-d[38]*d[40]
    C.flat[109] = d[24]*d[28]-d[24]*d[41]-d[36]*d[29]-d[25]*d[27]+d[38]*d[27]+d[26]*d[39]
    C.flat[114] = d[24]*d[40]+d[36]*d[28]-d[36]*d[41]-d[25]*d[39]-d[37]*d[27]+d[38]*d[39]
    C.flat[38] = 1+x1[0]*x2[0]*d[36]+x1[0]*x2[1]*d[37]+x1[1]*x2[0]*d[39]+x1[1]*x2[1]*d[40]+x1[0]*d[38]+x1[1]*d[41]
    C.flat[77] = 1+x1[2]*x2[2]*d[36]+x1[2]*x2[3]*d[37]+x1[3]*x2[2]*d[39]+x1[3]*x2[3]*d[40]+x1[3]*d[41]+x1[2]*d[38]
    C.flat[35] = x1[0]*d[20]+x1[1]*d[23]+x1[1]*x2[0]*d[21]+x1[1]*x2[1]*d[22]+x1[0]*x2[0]*d[18]+x1[0]*x2[1]*d[19]+x2[0]
    C.flat[36] = x1[0]*d[26]+x1[1]*d[29]+x1[1]*x2[0]*d[27]+x1[1]*x2[1]*d[28]+x1[0]*x2[0]*d[24]+x1[0]*x2[1]*d[25]+x2[1]
    C.flat[74] = x1[2]*d[20]+x1[3]*d[23]+x1[3]*x2[2]*d[21]+x1[3]*x2[3]*d[22]+x1[2]*x2[2]*d[18]+x1[2]*x2[3]*d[19]+x2[2]
    C.flat[75] = x1[2]*d[26]+x1[3]*d[29]+x1[3]*x2[2]*d[27]+x1[3]*x2[3]*d[28]+x1[2]*x2[2]*d[24]+x1[2]*x2[3]*d[25]+x2[3]
    C.flat[94] = d[0]*d[16]+d[12]*d[4]+d[31]*d[17]+d[13]*d[35]-d[1]*d[15]-d[13]*d[3]-d[32]*d[16]-d[14]*d[34]
    C.flat[83] = -d[0]*d[17]-d[12]*d[5]+d[13]*d[11]+d[7]*d[17]-d[14]*d[10]-d[8]*d[16]+d[14]*d[3]+d[2]*d[15]
    C.flat[95] = d[6]*d[16]+d[12]*d[10]-d[12]*d[35]-d[30]*d[17]-d[7]*d[15]-d[13]*d[9]+d[32]*d[15]+d[14]*d[33]
    C.flat[91] = d[0]*d[4]+d[31]*d[5]+d[19]*d[17]+d[13]*d[23]+d[1]*d[35]-d[1]*d[3]-d[32]*d[4]-d[20]*d[16]-d[14]*d[22]-d[2]*d[34]
    C.flat[93] = d[6]*d[10]-d[6]*d[35]-d[12]*d[29]-d[24]*d[17]-d[30]*d[11]-d[7]*d[9]+d[32]*d[9]+d[26]*d[15]+d[14]*d[27]+d[8]*d[33]
    C.flat[101] = d[0]*d[22]+d[18]*d[4]+d[37]*d[5]+d[31]*d[23]+d[19]*d[35]+d[1]*d[41]-d[1]*d[21]-d[19]*d[3]-d[38]*d[4]-d[32]*d[22]-d[20]*d[34]-d[2]*d[40]
    C.flat[88] = -d[0]*d[23]-d[18]*d[5]+d[25]*d[5]+d[19]*d[11]+d[7]*d[23]+d[1]*d[29]-d[26]*d[4]-d[20]*d[10]-d[8]*d[22]-d[2]*d[28]+d[20]*d[3]+d[2]*d[21]
    C.flat[89] = -d[0]*d[29]-d[6]*d[23]-d[18]*d[11]-d[24]*d[5]+d[25]*d[11]+d[7]*d[29]-d[26]*d[10]-d[8]*d[28]+d[26]*d[3]+d[20]*d[9]+d[8]*d[21]+d[2]*d[27]
    C.flat[110] = d[0]*d[40]+d[18]*d[34]+d[30]*d[22]+d[36]*d[4]+d[37]*d[35]+d[31]*d[41]-d[1]*d[39]-d[19]*d[33]-d[31]*d[21]-d[37]*d[3]-d[38]*d[34]-d[32]*d[40]
    C.flat[103] = d[6]*d[28]-d[6]*d[41]+d[24]*d[10]-d[24]*d[35]-d[30]*d[29]-d[36]*d[11]-d[7]*d[27]-d[25]*d[9]+d[38]*d[9]+d[32]*d[27]+d[26]*d[33]+d[8]*d[39]
    C.flat[111] = d[6]*d[40]+d[24]*d[34]+d[30]*d[28]-d[30]*d[41]+d[36]*d[10]-d[36]*d[35]-d[7]*d[39]-d[25]*d[33]-d[31]*d[27]-d[37]*d[9]+d[38]*d[33]+d[32]*d[39]
    C.flat[108] = d[18]*d[28]-d[18]*d[41]+d[24]*d[22]-d[36]*d[23]+d[37]*d[29]+d[25]*d[41]-d[19]*d[27]-d[25]*d[21]-d[38]*d[28]-d[26]*d[40]+d[38]*d[21]+d[20]*d[39]
    C.flat[32] = x1[0]*x2[0]*d[0]+x1[0]*x2[1]*d[1]+x1[0]*x2[0]**2*d[20]+x1[0]*x2[1]**2*d[20]+x1[1]*x2[1]*d[4]+x1[1]*x2[0]**2*d[23]+x1[1]*x2[1]**2*d[23]+x1[1]*x2[0]*d[3]+x1[1]*d[5]+x2[0]*x1[0]**2+x2[0]*x1[1]**2+x1[0]*d[2]
    C.flat[33] = x1[0]*x2[0]*d[6]+x1[0]*x2[1]*d[7]+x1[0]*x2[0]**2*d[26]+x1[0]*x2[1]**2*d[26]+x1[1]*x2[0]*d[9]+x1[1]*x2[1]*d[10]+x1[1]*x2[0]**2*d[29]+x1[1]*x2[1]**2*d[29]+x1[1]*d[11]+x2[1]*x1[0]**2+x2[1]*x1[1]**2+x1[0]*d[8]
    C.flat[71] = x1[2]*x2[2]*d[0]+x1[2]*x2[3]*d[1]+x1[2]*x2[2]**2*d[20]+x1[2]*x2[3]**2*d[20]+x1[3]*x2[2]*d[3]+x1[3]*x2[3]*d[4]+x1[3]*x2[2]**2*d[23]+x1[3]*x2[3]**2*d[23]+x1[3]*d[5]+x2[2]*x1[2]**2+x2[2]*x1[3]**2+x1[2]*d[2]
    C.flat[72] = x1[2]*x2[2]*d[6]+x1[2]*x2[3]*d[7]+x1[2]*x2[2]**2*d[26]+x1[2]*x2[3]**2*d[26]+x1[3]*x2[2]*d[9]+x1[3]*x2[3]*d[10]+x1[3]*x2[2]**2*d[29]+x1[3]*x2[3]**2*d[29]+x1[3]*d[11]+x2[3]*x1[2]**2+x2[3]*x1[3]**2+x1[2]*d[8]
    C.flat[104] = d[0]*d[34]+d[12]*d[22]+d[18]*d[16]+d[30]*d[4]+d[37]*d[17]+d[31]*d[35]+d[13]*d[41]-d[1]*d[33]-d[13]*d[21]-d[19]*d[15]-d[31]*d[3]-d[38]*d[16]-d[32]*d[34]-d[14]*d[40]
    C.flat[105] = d[6]*d[34]+d[12]*d[28]-d[12]*d[41]+d[24]*d[16]+d[30]*d[10]-d[30]*d[35]-d[36]*d[17]-d[7]*d[33]-d[13]*d[27]-d[25]*d[15]-d[31]*d[9]+d[38]*d[15]+d[32]*d[33]+d[14]*d[39]
    C.flat[34] = x1[0]*d[14]+x1[1]*d[17]+x2[0]**2*x1[0]**2+x2[0]**2*x1[1]**2+x2[1]**2*x1[0]**2+x2[1]**2*x1[1]**2+x1[1]*x2[0]*d[15]+x1[1]*x2[1]*d[16]+x1[1]*x2[0]**2*d[35]+x1[1]*x2[1]**2*d[35]+x1[0]*x2[0]*d[12]+x1[0]*x2[1]*d[13]+x1[0]*x2[0]**2*d[32]+x1[0]*x2[1]**2*d[32]
    C.flat[37] = x1[0]*d[32]+x1[1]*d[35]+x1[1]*x2[0]*d[33]+x1[1]*x2[1]*d[34]+x1[1]*x2[0]**2*d[41]+x1[1]*x2[1]**2*d[41]+x1[0]*x2[0]*d[30]+x1[0]*x2[1]*d[31]+x1[0]*x2[0]**2*d[38]+x1[0]*x2[1]**2*d[38]+x1[0]**2+x1[1]**2+x2[0]**2+x2[1]**2
    C.flat[73] = x1[2]*d[14]+x1[3]*d[17]+x2[2]**2*x1[2]**2+x2[2]**2*x1[3]**2+x2[3]**2*x1[2]**2+x2[3]**2*x1[3]**2+x1[2]*x2[3]**2*d[32]+x1[3]*x2[2]*d[15]+x1[3]*x2[3]*d[16]+x1[3]*x2[2]**2*d[35]+x1[3]*x2[3]**2*d[35]+x1[2]*x2[2]*d[12]+x1[2]*x2[3]*d[13]+x1[2]*x2[2]**2*d[32]
    C.flat[76] = x1[2]*d[32]+x1[3]*d[35]+x1[2]*x2[2]**2*d[38]+x1[2]*x2[3]**2*d[38]+x1[3]*x2[2]*d[33]+x1[3]*x2[3]*d[34]+x1[3]*x2[2]**2*d[41]+x1[3]*x2[3]**2*d[41]+x1[2]*x2[2]*d[30]+x1[2]*x2[3]*d[31]+x1[2]**2+x1[3]**2+x2[2]**2+x2[3]**2
    C.flat[92] = d[0]*d[10]-d[0]*d[35]+d[6]*d[4]-d[12]*d[23]-d[18]*d[17]-d[30]*d[5]+d[31]*d[11]+d[25]*d[17]+d[13]*d[29]+d[7]*d[35]-d[1]*d[9]-d[7]*d[3]-d[32]*d[10]-d[26]*d[16]-d[14]*d[28]-d[8]*d[34]+d[32]*d[3]+d[20]*d[15]+d[14]*d[21]+d[2]*d[33]
    C.flat[102] = d[0]*d[28]-d[0]*d[41]+d[6]*d[22]+d[18]*d[10]-d[18]*d[35]+d[24]*d[4]-d[30]*d[23]-d[36]*d[5]+d[37]*d[11]+d[31]*d[29]+d[25]*d[35]+d[7]*d[41]-d[1]*d[27]-d[7]*d[21]-d[19]*d[9]-d[25]*d[3]-d[38]*d[10]-d[32]*d[28]-d[26]*d[34]-d[8]*d[40]+d[38]*d[3]+d[32]*d[21]+d[20]*d[33]+d[2]*d[39]

    C = C/np.sqrt(np.sum(C*np.conj(C),axis=1,keepdims=True))

    def U(x,y,z):
        return np.array([x**3*z**2,x**2*z**2*y,x*z**2*y**2,y**3*z**2,x**2*z**3,x*z**3*y,y**2*z**3,z**4*x,z**4*y,x**3*z,x**2*z*y,x*z*y**2,z*y**3,x**2*z**2,x*z**2*y,y**2*z**2,x*z**3,y*z**3,z**4,x**3,y*x**2,x*y**2,y**3,z*x**2,z*y*x,y**2*z,z**2*x,z**2*y,z**3,x**2,y*x,y**2,x*z,y*z,z**2,x,y,z,1])

    return C,U