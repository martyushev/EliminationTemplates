import numpy as np
from scipy.sparse import csr_matrix
from scipy.linalg import lu, solve, eig

# Input: coefficient matrix C of size 10x40
# Output: solution matrix S of size 3x26

def red_14x40_relpose_6p_rad_1s(C):
    M = csr_matrix((C.flat[[0,1,2,3,20,21,22,23,30,31,32,36,37,39,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,25,26,27,28,29,33,34,35,38,40,41,42,43,60,61,62,63,70,71,72,76,77,79,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,65,66,67,68,69,73,74,75,78,100,101,102,103,110,111,112,116,117,119,84,85,86,87,91,92,93,94,95,96,97,104,105,106,107,108,113,114,115,118,84,85,86,87,91,92,93,94,95,96,97,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,140,141,142,143,150,151,152,156,157,159,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,148,149,153,154,155,158,160,161,162,163,180,181,182,183,190,191,192,196,197,199,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,184,185,186,187,188,189,193,194,195,198,220,221,222,223,230,231,232,236,237,239,204,205,206,207,211,212,213,214,215,216,217,224,225,226,227,228,233,234,235,238,204,205,206,207,211,212,213,214,215,216,217,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,260,261,262,263,270,271,272,276,277,279,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,264,265,266,267,268,269,273,274,275,278,280,281,282,283,300,301,302,303,310,311,312,316,317,319,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,304,305,306,307,308,309,313,314,315,318,340,341,342,343,350,351,352,356,357,359,324,325,326,327,331,332,333,334,335,336,337,344,345,346,347,348,353,354,355,358,324,325,326,327,331,332,333,334,335,336,337,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,380,381,382,383,390,391,392,396,397,399,364,365,366,367,371,372,373,374,375,376,377,384,385,386,387,388,393,394,395,398,364,365,366,367,371,372,373,374,375,376,377,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399]],([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13],[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,25,26,27,30,31,32,33,34,36,37,38,39,0,1,2,3,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,25,26,27,30,31,32,33,34,36,37,38,39,0,1,2,3,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,25,26,27,30,31,32,33,34,36,37,38,39,0,1,2,3,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,25,26,27,30,31,32,33,34,36,37,38,39,0,1,2,3,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39])),shape=(14,40))
    M = M.toarray()

    P,L,_ = lu(M[:,:4])
    M = solve(np.concatenate((P@L,P[:,4:]),axis=1),M[:,4:])
    M = M[-10:,:]

    T0 = np.zeros((26,26))
    T0[[7,8,9,10,16,17,18,22,23,25],:] = -M[:,10:]
    T0.flat[[7,34,61,88,115,142,169,302,329,356,383,410,516,543,570,649]] = 1
    T1 = np.zeros((26,26))
    T1[np.ix_([7,8,9,10,16,17,18,22,23,25],[7,8,9,10,16,17,18,22,23,25])] = M[:,:10]
    T1.flat[[0,27,54,81,108,135,162,297,324,351,378,405,513,540,567,648]] = 1

    _,V = eig(T0,T1)
    S = V[22:25,:]/np.tile(V[25,:],(3,1))
    S = S[:,np.all(np.isfinite(S),axis=0)]

    return S