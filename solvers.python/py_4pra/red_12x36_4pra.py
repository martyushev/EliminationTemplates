import numpy as np
from scipy.sparse import csr_matrix
from scipy.linalg import lu, solve, eig

# Input: coefficient matrix C of size 5x35
# Output: solution matrix S of size 3x24

def red_12x36_4pra(C,ss):
    M = csr_matrix((C.flat[[0,1,2,5,6,9,15,16,19,25,12,14,22,24,28,30,31,33,34,3,4,7,8,10,11,13,17,18,20,21,23,26,27,29,32,0,1,2,5,6,7,9,10,12,15,16,17,19,20,22,25,26,28,31,3,14,24,30,33,34,4,8,11,13,18,21,23,27,29,32,0,1,2,5,6,9,15,16,19,25,12,14,22,24,28,30,31,33,34,3,4,7,8,10,11,13,17,18,20,21,23,26,27,29,32,35,36,37,40,41,44,50,51,54,60,47,49,57,59,63,65,66,68,69,38,39,42,43,45,46,48,52,53,55,56,58,61,62,64,67,35,36,37,40,41,42,44,45,47,50,51,52,54,55,57,60,61,63,66,38,49,59,65,68,69,39,43,46,48,53,56,58,62,64,67,35,36,37,40,41,44,50,51,54,60,47,49,57,59,63,65,66,68,69,38,39,42,43,45,46,48,52,53,55,56,58,61,62,64,67,70,71,72,75,76,79,85,86,89,95,82,84,92,94,98,100,101,103,104,73,74,77,78,80,81,83,87,88,90,91,93,96,97,99,102,70,71,72,75,76,77,79,80,82,85,86,87,89,90,92,95,96,98,101,73,84,94,100,103,104,74,78,81,83,88,91,93,97,99,102,70,71,72,75,76,79,85,86,89,95,82,84,92,94,98,100,101,103,104,73,74,77,78,80,81,83,87,88,90,91,93,96,97,99,102,105,106,107,110,111,114,120,121,124,130,117,119,127,129,133,135,136,138,139,108,109,112,113,115,116,118,122,123,125,126,128,131,132,134,137,105,106,107,110,111,112,114,115,117,120,121,122,124,125,127,130,131,133,136,108,119,129,135,138,139,109,113,116,118,123,126,128,132,134,137,105,106,107,110,111,114,120,121,124,130,117,119,127,129,133,135,136,138,139,108,109,112,113,115,116,118,122,123,125,126,128,131,132,134,137]],([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],[9,10,11,12,13,14,15,16,17,18,22,23,24,25,26,27,28,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,26,28,31,32,34,36,39,41,43,46,48,51,3,4,5,6,7,8,12,13,14,17,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,41,42,43,44,45,48,49,50,53,9,10,11,12,13,14,15,16,17,18,22,23,24,25,26,27,28,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,26,28,31,32,34,36,39,41,43,46,48,51,3,4,5,6,7,8,12,13,14,17,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,41,42,43,44,45,48,49,50,53,9,10,11,12,13,14,15,16,17,18,22,23,24,25,26,27,28,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,26,28,31,32,34,36,39,41,43,46,48,51,3,4,5,6,7,8,12,13,14,17,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,41,42,43,44,45,48,49,50,53,9,10,11,12,13,14,15,16,17,18,22,23,24,25,26,27,28,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,26,28,31,32,34,36,39,41,43,46,48,51,3,4,5,6,7,8,12,13,14,17,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,41,42,43,44,45,48,49,50,53])),shape=(12,55))

    M0 = csr_matrix((np.array([-1,-2*ss,-ss**2,-1,-2,-2*ss,1,-1,-1,-ss,-2*ss,-ss**2,1,1,ss,-1,-2*ss,-ss**2,-1,-2,-2*ss,1,1,ss,1,1,ss,1,ss,1,1,1,ss,1,ss,1,-1,-2*ss,-ss**2,-1,-2,-2*ss,1,1,ss,1,1,ss,1,ss,1,1,1,ss,1,ss,1,1,ss,1,1,1,ss,1,ss,1,1,ss,1]),([0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,3,3,3,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18],[1,5,9,12,15,27,0,16,19,28,31,35,12,15,27,2,6,10,14,18,30,13,17,29,14,18,30,1,5,15,16,19,31,2,6,18,4,8,11,21,25,33,20,24,32,21,25,33,3,7,22,23,26,34,4,8,25,5,9,27,28,31,35,6,10,30,8,11,33])),shape=(19,36))
    M = M[:,19:]-M[:,:19]@M0 # Schur complement reduction
    M = M.toarray()

    P,L,_ = lu(M[:,:3])
    M = solve(np.concatenate((P@L,P[:,3:]),axis=1),M[:,3:])
    M = M[-9:,:]

    T0 = np.zeros((24,24))
    T0[[5,7,12,14,17,19,20,22,23],:] = -M[:,9:]
    T0.flat[[8,34,59,84,109,158,207,232,257,282,331,380,405,454,527]] = 1
    T1 = np.zeros((24,24))
    T1[np.ix_([5,7,12,14,17,19,20,22,23],[5,7,12,14,17,19,20,22,23])] = M[:,:9]
    T1.flat[[0,25,50,75,100,150,200,225,250,275,325,375,400,450,525]] = 1

    _,V = eig(T0,T1)
    S = V[20:23,:]/np.tile(V[23,:],(3,1))
    S = S[:,np.all(np.isfinite(S),axis=0)]

    return S