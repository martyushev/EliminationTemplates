import numpy as np
from scipy.sparse import csr_matrix
from scipy.linalg import lu, solve, eig

# Input: coefficient matrix C of size 2x16
# Output: solution matrix S of size 2x24

def red_6x30_stitching(C):
    M = csr_matrix((C.flat[[11,13,14,15,0,1,2,3,4,5,6,7,8,9,10,12,11,13,14,15,0,1,2,3,4,5,6,7,8,9,10,12,15,11,13,14,0,1,2,3,4,5,6,9,12,7,8,10,27,29,30,31,16,17,18,19,20,21,22,23,24,25,26,28,27,29,30,31,16,17,18,19,20,21,22,23,24,25,26,28,31,27,29,30,16,17,18,19,20,21,22,25,28,23,24,26]],([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],[1,2,3,4,6,8,11,13,14,16,17,20,21,23,24,28,2,3,4,5,7,10,13,15,16,19,20,23,24,27,28,29,0,3,4,5,9,12,15,18,19,22,23,25,26,27,28,29,1,2,3,4,6,8,11,13,14,16,17,20,21,23,24,28,2,3,4,5,7,10,13,15,16,19,20,23,24,27,28,29,0,3,4,5,9,12,15,18,19,22,23,25,26,27,28,29])),shape=(6,30))
    M = M.toarray()

    P,L,_ = lu(M[:,:1])
    M = solve(np.concatenate((P@L,P[:,1:]),axis=1),M[:,1:])
    M = M[-5:,:]

    T0 = np.zeros((24,24))
    T0[[15,18,22,23,20],:] = -M[:,5:]
    T0.flat[[2,28,53,78,103,128,153,178,203,229,254,279,304,329,354,405,430,476,527]] = 1
    T1 = np.zeros((24,24))
    T1[np.ix_([15,18,22,23,20],[15,18,22,23,20])] = M[:,:5]
    T1.flat[[0,25,50,75,100,125,150,175,200,225,250,275,300,325,350,400,425,475,525]] = 1

    _,V = eig(T0,T1)
    S = V[21:23,:]/np.tile(V[23,:],(2,1))
    S = S[:,np.all(np.isfinite(S),axis=0)]

    return S