import numpy as np
from scipy.sparse import csr_matrix
from scipy.linalg import lu, solve, eig

# Input: coefficient matrix C of size 4x18
# Output: solution matrix S of size 4x36

def red_38x74_pose_quiver(C):
    M = csr_matrix((C.flat[[1,12,16,4,17,11,15,13,10,0,14,8,1,12,16,4,17,11,15,13,10,8,14,0,1,12,16,4,17,11,15,13,10,14,0,8,12,4,11,1,16,17,15,13,10,14,8,0,12,16,4,17,11,15,13,1,10,14,0,8,12,4,11,1,16,17,15,13,10,14,8,0,12,16,4,17,11,15,13,1,10,14,8,0,12,4,11,1,16,17,15,13,10,14,8,0,25,30,34,35,29,33,20,26,28,32,30,29,25,34,35,33,28,20,26,32,30,34,35,29,33,25,28,20,32,26,30,34,35,29,33,25,28,26,32,20,30,34,35,29,33,25,28,32,20,26,30,29,34,35,33,25,28,32,20,26,30,34,35,29,33,25,28,32,20,26,30,29,34,35,33,25,28,32,20,26,30,34,35,29,33,25,28,32,20,26,39,48,52,53,47,51,44,41,46,50,48,47,39,52,53,51,46,44,41,50,48,52,53,47,51,39,46,41,50,44,48,52,53,47,51,39,46,44,50,41,48,52,53,47,51,39,46,50,41,44,48,47,39,52,53,51,46,50,44,41,48,52,53,47,51,39,46,50,44,41,48,47,39,52,53,51,46,50,44,41,48,52,53,47,51,39,46,50,44,41,48,47,39,52,53,51,46,50,44,41,63,66,70,71,65,69,62,60,64,68,66,65,63,70,71,69,64,62,60,68,66,70,71,65,69,63,64,60,68,62,63,66,70,71,65,69,64,68,62,60,66,70,71,65,69,63,64,68,60,62,66,70,71,65,69,63,64,68,60,62,63,66,70,71,65,69,64,68,62,60,66,65,63,70,71,69,64,68,62,60,66,70,71,65,69,63,64,68,62,60,66,65,63,70,71,69,64,68,62,60,66,65,63,70,71,69,64,68,62,60]],([0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37],[12,18,22,24,26,28,32,33,49,68,71,73,11,17,21,23,25,27,31,32,47,59,69,70,10,15,18,19,22,23,28,29,44,49,65,72,2,4,5,9,17,21,27,28,42,47,54,63,14,16,18,20,21,25,26,36,41,46,60,69,1,3,4,8,15,18,23,24,40,44,50,58,13,14,15,16,17,21,22,34,39,41,47,55,0,1,2,7,13,14,17,18,38,39,42,51,12,23,28,32,34,36,64,66,72,73,4,7,10,23,28,34,50,57,62,72,18,22,26,28,32,37,49,56,71,73,17,21,25,27,31,36,47,59,69,72,15,18,22,23,28,35,44,49,52,72,2,5,17,21,27,34,42,47,50,54,14,16,20,21,25,32,41,46,49,69,1,4,15,18,23,30,40,44,45,50,13,14,16,17,21,28,39,41,44,47,10,23,28,32,34,36,66,67,72,73,4,7,8,23,28,34,50,62,64,72,18,22,26,28,32,35,49,61,71,73,17,21,25,27,31,34,47,59,69,73,15,18,22,23,28,30,44,49,56,72,2,5,7,17,21,27,42,47,54,72,14,16,20,21,25,28,41,46,69,71,1,4,6,15,18,23,40,44,50,52,13,14,16,17,21,23,39,41,47,49,0,2,4,13,14,17,38,39,42,44,11,23,28,32,34,36,66,70,72,73,4,7,9,23,28,34,50,62,63,72,18,22,26,28,32,36,49,60,71,73,12,24,29,33,35,37,56,61,67,68,15,18,22,23,28,34,44,49,55,72,14,16,20,21,25,31,41,46,53,69,10,19,24,29,30,35,52,56,64,65,1,4,7,15,18,23,40,44,50,51,13,14,16,17,21,27,39,41,47,48,3,6,8,19,24,30,45,52,57,58,0,2,5,13,14,17,38,39,42,43])),shape=(38,74))
    M = M.toarray()

    P,L,_ = lu(M[:,:13])
    M = solve(np.concatenate((P@L,P[:,13:]),axis=1),M[:,13:])
    M = M[-25:,:]

    T0 = np.zeros((36,36))
    T0[[0,1,2,3,4,6,7,8,9,11,12,14,31,33,16,34,18,19,21,35,23,24,26,28,29],:] = -M[:,25:]
    T0.flat[[181,363,474,548,623,734,825,934,990,1103,1187]] = 1
    T1 = np.zeros((36,36))
    T1[np.ix_([0,1,2,3,4,6,7,8,9,11,12,14,31,33,16,34,18,19,21,35,23,24,26,28,29],[0,1,2,3,4,6,7,8,9,11,12,14,31,33,16,34,18,19,21,35,23,24,26,28,29])] = M[:,:25]
    T1.flat[[185,370,481,555,629,740,814,925,999,1110,1184]] = 1

    _,V = eig(T0,T1)
    S = np.zeros((4,36),dtype=np.complex_)
    S[[1,3],:] = V[[32,34],:]/np.tile(V[35,:],(2,1))
    S[[0,2],:] = np.tile(V[35,:],(2,1))/V[[31,33],:]
    S = S[:,np.all(np.isfinite(S),axis=0)]

    return S