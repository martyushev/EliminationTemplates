import numpy as np
from scipy.sparse import csr_matrix
from scipy.linalg import lu, solve, eig

# Input: coefficient matrix C of size 9x40
# Output: solution matrix S of size 4x12

def red_28x40_p4p_fr_iccv17(C):
    M = csr_matrix((C.flat[[10,12,14,17,19,22,26,27,28,29,30,32,33,36,37,35,39,31,34,38,10,12,14,17,19,22,26,27,28,29,30,32,36,35,37,39,31,33,34,38,10,12,14,17,19,22,27,29,26,28,30,31,32,33,34,35,36,37,38,39,10,12,14,27,29,26,28,30,35,36,37,39,17,19,22,31,32,33,34,38,50,52,54,57,59,62,66,67,68,69,70,72,73,76,77,75,79,71,74,78,50,52,54,57,59,62,66,67,68,69,70,72,76,75,77,79,71,73,74,78,50,52,54,57,59,62,67,69,66,68,70,71,72,73,74,75,76,77,78,79,50,52,54,67,69,66,68,70,75,76,77,79,57,59,62,71,72,73,74,78,107,109,110,112,113,114,116,117,119,118,107,109,110,112,113,114,116,117,118,119,107,109,110,116,117,119,112,113,114,118,107,109,110,112,113,116,117,119,114,118,107,109,110,112,116,117,119,113,114,118,107,109,110,112,113,114,116,117,118,119,107,109,110,116,117,119,112,113,114,118,147,149,150,152,153,154,156,157,159,158,147,149,150,152,153,154,156,157,159,158,147,149,150,152,153,154,156,157,158,159,147,149,150,156,157,159,152,153,154,158,147,149,150,152,153,156,157,159,154,158,147,149,150,152,156,157,159,153,154,158,147,149,150,152,153,154,156,157,158,159,147,149,150,156,157,159,152,153,154,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,180,187,189,186,188,190,195,196,197,199,177,179,181,182,183,184,185,191,192,193,194,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,220,227,229,226,228,230,235,236,237,239,217,219,221,222,223,224,225,231,232,233,234,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,260,267,269,266,268,270,275,276,277,279,257,259,261,262,263,264,265,271,272,273,274,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,300,307,309,306,308,310,315,316,317,319,297,299,301,302,303,304,305,311,312,313,314,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,340,347,349,346,348,350,355,356,357,359,337,339,341,342,343,344,345,351,352,353,354,358]],([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27],[0,1,2,4,5,7,10,11,12,13,15,17,18,19,20,21,25,28,32,36,1,2,3,5,6,8,12,13,14,15,16,18,20,22,23,26,29,30,33,37,4,5,6,7,8,9,17,18,28,29,30,31,32,33,34,35,36,37,38,39,10,12,14,19,20,21,22,23,24,25,26,27,28,29,31,35,36,37,38,39,0,1,2,4,5,7,10,11,12,13,15,17,18,19,20,21,25,28,32,36,1,2,3,5,6,8,12,13,14,15,16,18,20,22,23,26,29,30,33,37,4,5,6,7,8,9,17,18,28,29,30,31,32,33,34,35,36,37,38,39,10,12,14,19,20,21,22,23,24,25,26,27,28,29,31,35,36,37,38,39,1,2,3,5,6,8,12,14,22,29,4,5,6,7,8,9,28,29,31,35,10,12,14,21,22,24,28,29,31,35,11,13,15,17,18,19,20,25,32,36,13,15,16,18,20,23,26,30,33,37,17,18,30,32,33,34,36,37,38,39,19,20,23,25,26,27,36,37,38,39,0,1,2,4,5,7,10,12,21,28,1,2,3,5,6,8,12,14,22,29,4,5,6,7,8,9,28,29,31,35,10,12,14,21,22,24,28,29,31,35,11,13,15,17,18,19,20,25,32,36,13,15,16,18,20,23,26,30,33,37,17,18,30,32,33,34,36,37,38,39,19,20,23,25,26,27,36,37,38,39,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39])),shape=(28,40))
    M = M.toarray()

    P,L,_ = lu(M[:,:21])
    M = solve(np.concatenate((P@L,P[:,21:]),axis=1),M[:,21:])
    M = M[-7:,:]

    T0 = np.zeros((12,12))
    T0[[0,1,2,7,8,9,11],:] = -M[:,7:]
    T0.flat[[43,56,69,82,131]] = 1
    T1 = np.zeros((12,12))
    T1[np.ix_([0,1,2,7,8,9,11],[0,1,2,7,8,9,11])] = M[:,:7]
    T1.flat[[39,52,65,78,130]] = 1

    _,V = eig(T0,T1)
    S = V[7:11,:]/np.tile(V[11,:],(4,1))
    S = S[:,np.all(np.isfinite(S),axis=0)]

    return S